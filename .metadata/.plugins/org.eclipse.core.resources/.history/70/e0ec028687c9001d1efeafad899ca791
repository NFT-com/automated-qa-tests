package com.nft.home_page;


import java.util.List;

import javax.swing.text.TableView.TableRow;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;

import com.google.common.collect.Table;
import com.nft.qa.base.Locators;
import com.nft.qa.base.TestBase;
import graphql.Assert;

public class homepage extends TestBase{
	Locators locators = new Locators();

	

	public void NavigateToNFT () {

		System.out.println("<<<<=====NFT.COM loaded successfully.====>>>>");
		String currenturl = driver.getCurrentUrl();
		System.out.println(currenturl);
	}
	
	public void ValidateNFTLogoImage() {
		Assert.assertTrue(locators.NFTCom_LogoImage.isDisplayed());
		Assert.assertTrue(locators.NFTCom_LogowithName.isDisplayed());
	}
	
	public void ValidateNFTcomHeaderOptions(){
		String DiscoverheaderOption = locators.NFTCom_Discover_Headeroption.getText();
		Assert.assertTrue(locators.NFTCom_Discover_Headeroption.isDisplayed());
		System.out.println("Displayed header Option is====>> " + DiscoverheaderOption);
		
		
		String NFTCom_Gallery_Headeroption = locators.NFTCom_Gallery_Headeroption.getText();
		Assert.assertTrue(locators.NFTCom_Gallery_Headeroption.isDisplayed());
		System.out.println("Displayed header Option is====>> " + NFTCom_Gallery_Headeroption);
		
		String NFTCom_Learn_Headeroption = locators.NFTCom_Learn_Headeroption.getText();
		Assert.assertTrue(locators.NFTCom_Learn_Headeroption.isDisplayed());
		System.out.println("Displayed header Option is====>> " + NFTCom_Learn_Headeroption);
		
		String NFTCom_Search_Headeroption = locators.NFTCom_Search_Headeroption.getText();
		Assert.assertTrue(locators.NFTCom_Search_Headeroption.isDisplayed());
		System.out.println("Displayed header Option is====>> " + NFTCom_Search_Headeroption);
		
		String NFTCom_SignIn_Headeroption = locators.NFTCom_SignIn_Headeroption.getText();
		Assert.assertTrue(locators.NFTCom_SignIn_Headeroption.isDisplayed());
		System.out.println("Displayed header Option is====>> " + NFTCom_SignIn_Headeroption);
		
		String NFTCom_Cart_Headeroption = locators.NFTCom_Cart_Headeroption.getText();
		Assert.assertTrue(locators.NFTCom_Cart_Headeroption.isDisplayed());
		System.out.println("Displayed header Option is====>> " + NFTCom_Cart_Headeroption);
	}
	
	public void VerifyDiscoverHeaderDropDownoptions() {
		locators.NFTCom_Discover_Headeroption.click();
		
		String NFTCom_Discover_NFTs_DropwDownValue = locators.NFTCom_Discover_NFTs_DropwDownValue.getText();
		Assert.assertTrue(locators.NFTCom_Discover_NFTs_DropwDownValue.isDisplayed());
		System.out.println("Discover header dropwdown Option is====>> " + NFTCom_Discover_NFTs_DropwDownValue);
		
		String NFTCom_Discover_Collections_DropwDownValue = locators.NFTCom_Discover_Collections_DropwDownValue.getText();
		Assert.assertTrue(locators.NFTCom_Discover_Collections_DropwDownValue.isDisplayed());
		System.out.println("Discover header dropwdown Option is====>> " + NFTCom_Discover_Collections_DropwDownValue);
		
		String NFTCom_Discover_Profiles_DropwDownValue = locators.NFTCom_Discover_Profiles_DropwDownValue.getText();
		Assert.assertTrue(locators.NFTCom_Discover_Profiles_DropwDownValue.isDisplayed());
		System.out.println("Discover header dropwdown Option is====>> " + NFTCom_Discover_Profiles_DropwDownValue);
		
	}
	
	public void VerifyLearnHeaderDropDownoptions() throws InterruptedException {
		Thread.sleep(1000);
		locators.NFTCom_Learn_Headeroption.click();
		
		String NFTCom_Learn_Docs_DropwDownValue = locators.NFTCom_Learn_Docs_DropwDownValue.getText();
		Assert.assertTrue(locators.NFTCom_Learn_Docs_DropwDownValue.isDisplayed());
		System.out.println("Learn header dropwdown Option is====>> " + NFTCom_Learn_Docs_DropwDownValue);
		
		String NFTCom_Learn_Blog_DropwDownValue = locators.NFTCom_Learn_Blog_DropwDownValue.getText();
		Assert.assertTrue(locators.NFTCom_Learn_Blog_DropwDownValue.isDisplayed());
		System.out.println("Learn header dropwdown Option is====>> " + NFTCom_Learn_Blog_DropwDownValue);
	}
	
	public void VerifySearchFieldResponse() throws InterruptedException {
		locators.NFTCom_Search_Headeroption.click();
		Thread.sleep(1000);
	}
	
	public void VerifySignInResponse() throws InterruptedException {
		locators.NFTCom_SignIn_Headeroption.click();
		Thread.sleep(1000);
		locators.Close_SignIn_PopUpWindow.click();
		Thread.sleep(1000);
	}
	
	public void VerifyCartheaderOption() throws InterruptedException {
		locators.NFTCom_Cart_Headeroption.click();
		Thread.sleep(1000);
		
		String Cart_MyCartWindow = locators.Cart_MyCartWindow.getText();
		Assert.assertTrue(locators.Cart_MyCartWindow.isDisplayed());
		System.out.println("Learn header dropwdown Option is====>> " + Cart_MyCartWindow);
		
		
		String Cart_BuySection = locators.Cart_BuySection.getText();
		Assert.assertTrue(locators.Cart_BuySection.isDisplayed());
		System.out.println("Learn header dropwdown Option is====>> " + Cart_BuySection);
		
		
		String Cart_SellSection = locators.Cart_SellSection.getText();
		Assert.assertTrue(locators.Cart_SellSection.isDisplayed());
		System.out.println("Learn header dropwdown Option is====>> " + Cart_SellSection);
		
		
		String Cart_ItemsCount = locators.Cart_ItemsCount.getText();
		Assert.assertTrue(locators.Cart_ItemsCount.isDisplayed());
		System.out.println("Learn header dropwdown Option is====>> " + Cart_ItemsCount);
		
		Assert.assertTrue(locators.Cart_WindowCrossIcon.isDisplayed());
		locators.Cart_WindowCrossIcon.click();
		Thread.sleep(1000);
	}
	
	public void VerifyClickonCreateAProfileButton() throws InterruptedException {
		
		locators.CreateAProfileButtonOnBannerSection.click();
		Thread.sleep(1000);
		String MintProfileURL = driver.getCurrentUrl();
		System.out.println("Current Redirected URL is ===>> " + MintProfileURL);
		Thread.sleep(2000);
		driver.navigate().back();
		driver.navigate().back();
		Thread.sleep(2000);
		locators.CreateAProfileButtonOnNFTMarketplaceSection.click();
		Thread.sleep(1000);
		String MintProfileURL2 = driver.getCurrentUrl();
		System.out.println("Current Redirected URL is ===>> " + MintProfileURL2);
		Thread.sleep(2000);
		driver.navigate().back();
		driver.navigate().back();
		Thread.sleep(2000);
		
		locators.CreateAProfileButtonAboveTheFooterSection.click();
		Thread.sleep(1000);
		String MintProfileURL3 = driver.getCurrentUrl();
		System.out.println("Current Redirected URL is ===>> " + MintProfileURL3);
		Thread.sleep(2000);
		driver.navigate().back();
		driver.navigate().back();
		Thread.sleep(2000);
	}
	
	public void VerifyHomePageSections() {
		String TheSocialNFTMarketplaceSection = locators.TheSocialNFTMarketplaceSection.getText();
		Assert.assertTrue(locators.TheSocialNFTMarketplaceSection.isDisplayed());
		System.out.println("Displayed Value is====>> " + TheSocialNFTMarketplaceSection);
		
		String SocialIdentitySection = locators.SocialIdentitySection.getText();
		Assert.assertTrue(locators.SocialIdentitySection.isDisplayed());
		System.out.println("Displayed Value is====>> " + SocialIdentitySection);
		
		String TheNFTComMarketplaceSection = locators.TheNFTComMarketplaceSection.getText();
		Assert.assertTrue(locators.TheNFTComMarketplaceSection.isDisplayed());
		System.out.println("Displayed Value is====>> " + TheNFTComMarketplaceSection);
		
		String DiscoverANewWorldSection = locators.DiscoverANewWorldSection.getText();
		Assert.assertTrue(locators.DiscoverANewWorldSection.isDisplayed());
		System.out.println("Displayed Value is====>> " + DiscoverANewWorldSection);
		
		String GettingStartedSection = locators.GettingStartedSection.getText();
		Assert.assertTrue(locators.GettingStartedSection.isDisplayed());
		System.out.println("Displayed Value is====>> " + GettingStartedSection);

		String GettingStartedSection_CreateYourProfile = locators.GettingStartedSection_CreateYourProfile.getText();
		Assert.assertTrue(locators.GettingStartedSection_CreateYourProfile.isDisplayed());
		System.out.println("Displayed Value is====>> " + GettingStartedSection_CreateYourProfile);
		
		String GettingStartedSection_PayNoFees = locators.GettingStartedSection_PayNoFees.getText();
		Assert.assertTrue(locators.GettingStartedSection_PayNoFees.isDisplayed());
		System.out.println("Displayed Value is====>> " + GettingStartedSection_PayNoFees);
		
		String GettingStartedSection_DisplayYourWay = locators.GettingStartedSection_DisplayYourWay.getText();
		Assert.assertTrue(locators.GettingStartedSection_DisplayYourWay.isDisplayed());
		System.out.println("Displayed Value is====>> " + GettingStartedSection_DisplayYourWay);
		
		String NFTProfileLeaderboardSection = locators.NFTProfileLeaderboardSection.getText();
		Assert.assertTrue(locators.NFTProfileLeaderboardSection.isDisplayed());
		System.out.println("Displayed Value is====>> " + NFTProfileLeaderboardSection);
		
		String NFTProfileLeaderboardSection_Profile = locators.NFTProfileLeaderboardSection_Profile.getText();
		Assert.assertTrue(locators.NFTProfileLeaderboardSection_Profile.isDisplayed());
		System.out.println("Displayed table header coloumn 1 is====>> " + NFTProfileLeaderboardSection_Profile);
		
		String NFTProfileLeaderboardSection_NumberOfGK = locators.NFTProfileLeaderboardSection_NumberOfGK.getText();
		Assert.assertTrue(locators.NFTProfileLeaderboardSection_NumberOfGK.isDisplayed());
		System.out.println("Displayed table header coloumn 2 is====>> " + NFTProfileLeaderboardSection_NumberOfGK);
		
		String NFTProfileLeaderboardSection_NumberOfNFTCollections = locators.NFTProfileLeaderboardSection_NumberOfNFTCollections.getText();
		Assert.assertTrue(locators.NFTProfileLeaderboardSection_NumberOfNFTCollections.isDisplayed());
		System.out.println("Displayed table header coloumn 3 is====>> " + NFTProfileLeaderboardSection_NumberOfNFTCollections);
		
		String NFTProfileLeaderboardSection_ItemsCollected = locators.NFTProfileLeaderboardSection_ItemsCollected.getText();
		Assert.assertTrue(locators.NFTProfileLeaderboardSection_ItemsCollected.isDisplayed());
		System.out.println("Displayed table header coloumn 4 is====>> " + NFTProfileLeaderboardSection_ItemsCollected);
		
		
		WebElement tableHeader = driver.findElement(By.xpath("//tr//th"));
	    List<WebElement> rowsList = tableHeader.findElements(By.xpath("//tr//th"));

	    List<WebElement> columnsList = null;

	    for (WebElement row : rowsList) {
	        columnsList = row.findElements(By.tagName("td"));

	        for (WebElement column : columnsList) {
	            System.out.println("column text" + column.getText()+ ", "); // here is is just printing number of rows, like 1, 2
	        }

	    }
		
		@FindBy(xpath = "//tr//th")
		public WebElement NFTProfileLeaderboardtable_headers;
		
		@FindBy(xpath = "//tr[1]//td")
		public WebElement NFTProfileLeaderboardtable_Column1Value;
		
		@FindBy(xpath = "//tr[2]//td")
		public WebElement NFTProfileLeaderboardtable_Column2Value;	
		
		@FindBy(xpath = "//tr[3]//td")
		public WebElement NFTProfileLeaderboardtable_Column3Value;	
		
		@FindBy(xpath = "//tr[4]//td")
		public WebElement NFTProfileLeaderboardtable_Column4Value;
		
		@FindBy(xpath = "//tr[5]//td")
		public WebElement NFTProfileLeaderboardtable_Column5Value;
		
		@FindBy(xpath = "//tr[6]//td")
		public WebElement NFTProfileLeaderboardtable_Column6Value;
		
		@FindBy(xpath = "//tr[7]//td")
		public WebElement NFTProfileLeaderboardtable_Column7Value;
		
		@FindBy(xpath = "//tr[8]//td")
		public WebElement NFTProfileLeaderboardtable_Column8Value;
		
		@FindBy(xpath = "//tr[9]//td")
		public WebElement NFTProfileLeaderboardtable_Column9Value;
		
		@FindBy(xpath = "//tr[10]//td")
		public WebElement NFTProfileLeaderboardtable_Column10Value;
		
		@FindBy(xpath = "//h2[contains(text(),'News')]")
		public WebElement NewsSection;
		
		@FindBy(xpath = "//a[contains(text(),'READ OUR BLOG')]")
		public WebElement NewsSection_ReadOurBlogs;
		
		@FindBy(xpath = "//span[starts-with(@id,'anim-build-profile-ttl-')]")
		public WebElement BuildYourNFTProfileSection;
		
		@FindBy(xpath = "//span[contains(text(),'Learn')]")
		public WebElement FooterSection_Learn;
		
		@FindBy(xpath = "//span[contains(text(),'Resources')]")
		public WebElement FooterSection_Resources;
		
		@FindBy(xpath = "//span[contains(text(),'Policies')]")
		public WebElement FooterSection_Policies;
		
		@FindBy(xpath = "(//a[contains(text(),'Gallery')])[2]")
		public WebElement FooterSection_Learn_Gallery;
		
		@FindBy(xpath = "//a[contains(text(),'Docs')]")
		public WebElement FooterSection_Learn_Docs;
		
		@FindBy(xpath = "//a[contains(text(),'Blog')]")
		public WebElement FooterSection_Learn_Blog;
		
		@FindBy(xpath = "//a[contains(text(),'What is an NFT?')]")
		public WebElement FooterSection_Learn_WhatIsAnNFT;
		
		@FindBy(xpath = "//a[contains(text(),'Support')]")
		public WebElement FooterSection_Resources_Support;
		
		@FindBy(xpath = "//a[contains(text(),'Careers')]")
		public WebElement FooterSection_Resources_Careers;
		
		@FindBy(xpath = "//a[contains(text(),'Business Inquiries')]")
		public WebElement FooterSection_Resources_BI;
		
		@FindBy(xpath = "//a[contains(text(),'Terms of Service')]")
		public WebElement FooterSection_Policies_TOS;
		
		@FindBy(xpath = "//a[contains(text(),'Privacy Policy')]")
		public WebElement FooterSection_Policies_PP;
		
		@FindBy(xpath = "//a[contains(text(),'Bug Bounty')]")
		public WebElement FooterSection_Policies_BB;
		
		@FindBy(xpath = "//h4[contains(text(),'Subscribe to our notifications')]")
		public WebElement FooterSection_SubscribeToOurNotifications;
		
		@FindBy(xpath = "//button[contains(text(),'Subscribe')]")
		public WebElement FooterSection_SubscribeButton;
		
		@FindBy(xpath = "//input[@type='email']")
		public WebElement FooterSection_EmailInputField;
		
		@FindBy(xpath = "//a[@href='https://discord.com/invite/nftdotcom']")
		public WebElement FooterSection_Discord;
		
		@FindBy(xpath = "//a[@href='https://twitter.com/NFTcomofficial']")
		public WebElement FooterSection_Twitter;
		
		@FindBy(xpath = "//footer[@id='FooterContainer']//div//a[@href='/']")
		public WebElement FooterSection_NFTcom;
		
		
		
		
	}
	
	
	
	
	
	
	
}

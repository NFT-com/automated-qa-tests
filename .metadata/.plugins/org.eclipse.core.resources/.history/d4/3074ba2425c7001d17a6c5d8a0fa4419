package com.nft.qa.pages;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.NoSuchSessionException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.b1.qa.util.TestUtility;
import com.nft.qa.base.TestBase;

public class ReviewsPage extends TestBase {

	TestUtility testUtil = new TestUtility();
	HomePage homePage = new HomePage();

	@FindBy(xpath = "//div[@class='sc-kNBZmU jUXjdf']")
	WebElement PageHeader;

	@FindBy(xpath = "//div[@class='filtertext sc-jUiVId dsonYY']")
	WebElement DefaultQue;

	@FindBy(xpath = "//div[@class='totalcounttext sc-kecUPG gZNsQg']")
	WebElement TotalCount;

	@FindBy(xpath = "//*[@id=\"fltrOptPosting Date\"]")
	WebElement PostingDate;

	@FindBy(id = "//a[contains(text(),'Custom')]")
	WebElement custom;

	@FindBy(id = "calendarfrom")
	WebElement fromDate;

	@FindBy(id = "calendarto")
	WebElement toDate;

	@FindBy(xpath = "//li[@class='calendaractionitem sc-bECiaU dxHYfu']//a[contains(text(),'All Time')]")
	WebElement AllTimeFilter;

	@FindBy(xpath = "//div[@class='sc-hPZeXZ chNvWh']//a[@class='dropdownapplyaction sc-eylKsO kxiDLk'][contains(text(),'Apply')]")
	WebElement ApplyButton;

	@FindBy(xpath = "//div[contains(text(),'REVIEWS')]")
	WebElement Reviews;

	@FindBy(xpath = "/html/body/div/div/div[1]/ul/li[2]/div/div[1]/div")
	WebElement MyProfile;

	@FindBy(xpath = "//div[contains(text(),'Accounts')]")
	WebElement Account;

	@FindBy(xpath = "//div[contains(text(),'Entitlements')]")
	WebElement Entitlements;

	@FindBy(css = "#moreFiltOpt")
	WebElement filterOptions;

	@FindBy(css = "#saveFiltOpt")
	WebElement saveAsNewFilter;

	@FindBy(xpath = "//input[@type='text' and @placeholder='Filter Name']")
	WebElement filterName;

	@FindBy(xpath = "//a[@class='export-filt-opt']")
	WebElement exportReviewData;

	@FindBy(xpath = "//span[contains(text(),'Export')]")
	WebElement exportBtn;

	@FindBy(xpath = "//span[contains(text(),'Submit')]")
	WebElement submitBtn;

	@FindBy(xpath = "//a[@class='rst-filt-opt']")
	WebElement resetFtr;

	@FindBy(xpath = "//a[starts-with(@class,'filter-toggle sc-')]")
	WebElement filterIcon;

	@FindBy(xpath = "//article[1]//div[1]//div[1]//div[3]//div[1]//button[1]")
	WebElement RespondBTN;

	@FindBy(xpath = "//div[starts-with(@class,'filtertext sc-')]")
	WebElement ReviewOptions;

	@FindBy(xpath = "//div[contains(text(),'Delete')]")
	WebElement Delete;

	public ReviewsPage() {

		PageFactory.initElements(driver, this);

	}

	public void selectReviewOnEntitlements() {

		TestUtility.clickOn(driver, MyProfile, 30);
		TestUtility.clickOn(driver, Account, 30);
		TestUtility.clickOn(driver, Entitlements, 30);

	}

	public void selectReviews() {
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		WebElement locator = driver.findElement(By.xpath("//div[contains(text(),'REVIEWS')]"));
		new WebDriverWait(driver, 60).ignoring(NoSuchSessionException.class)
				.until(ExpectedConditions.elementToBeClickable(locator));
		locator.click();

	}

	public void selectCheesecake() throws Exception {
		Thread.sleep(5000);
		homePage.clickOnContextAndSelectCheesecake();
		String LocationName = driver.findElement(By.xpath("//div[contains(text(),'cheesecake')]")).getText();
		System.out.println("Location Name : " + LocationName);

	}

	public void saveFilter() throws Exception {
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		Thread.sleep(1000);
		JavascriptExecutor js1 = (JavascriptExecutor) driver;
		js1.executeScript("arguments[0].click();", filterOptions);

		Thread.sleep(1000);
		js1.executeScript("arguments[0].click();", saveAsNewFilter);

		filterName.sendKeys("Test123");
		TestUtility.clickOn(driver, submitBtn, 30);

	}

	public void clickOnReviews() throws InterruptedException {
		driver.navigate().refresh();
		Thread.sleep(5000);
		WebElement Reviews = driver.findElement(By.xpath("//div[contains(text(),'REVIEWS')]"));
		Actions actions = new Actions(driver);
		actions.moveToElement(Reviews);
		actions.click().build().perform();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::div[contains(text(),'Reviews Feed')][1]")).click();
		driver.navigate().refresh();
	}

	public void totalCountOnDefault() throws Exception {
		driver.navigate().refresh();
		Thread.sleep(2000);
		String totalCount = (String) ((JavascriptExecutor) driver).executeScript("return arguments[0].innerText;",
				driver.findElement(By.xpath("//div[starts-with(@class,'totalcounttext sc-')]")));
		System.out.println("Total Count on Default : " + totalCount);
	}

	public static void selectGoogleSource() throws Exception {
		Thread.sleep(2000);

		WebElement sourceProvider = driver.findElement(By.xpath("//a[@id='fltrOptSource']"));
		TestUtility.clickOn(driver, sourceProvider, 30);

		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Google')]")).click();

		WebElement applyBtn = driver.findElement(By.xpath(
				"//div[@class='fixed-max sc-hPZeXZ chNvWh']//a[@class='dropdownapplyaction sc-eylKsO kxiDLk'][contains(text(),'Apply')]"));
		TestUtility.clickOn(driver, applyBtn, 30);

	}

	public void verifyFilter() {
		TestUtility.clickOn(driver, filterIcon, 30);

	}

	public void postingDate() throws Exception {

		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement PostingDate = wait.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("//a[@id='fltrOptPosting Date']//span[contains(text(),'Posting Date')]")));
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].click();", PostingDate);

		WebDriverWait wait1 = new WebDriverWait(driver, 20);
		WebElement AllTimeFilter = wait1.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("//li[starts-with(@class,'calendaractionitem sc-')]//a[contains(text(),'All Time')]")));
		JavascriptExecutor js1 = (JavascriptExecutor) driver;
		js1.executeScript("arguments[0].click();", AllTimeFilter);

		WebDriverWait wait2 = new WebDriverWait(driver, 20);
		WebElement ApplyButton = wait2.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][1]")));
		JavascriptExecutor js2 = (JavascriptExecutor) driver;
		js2.executeScript("arguments[0].click();", ApplyButton);

	}

	public void TotalCountOnAllTime() throws Exception {

		driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);
		Thread.sleep(2000);
		String totalCount = (String) ((JavascriptExecutor) driver).executeScript("return arguments[0].innerText;",
				driver.findElement(By.xpath("//div[starts-with(@class,'totalcounttext sc-')]")));
		System.out.println("Total Count on Default : " + totalCount);
	}

	public void exportData() throws Exception {
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		Thread.sleep(1000);
		JavascriptExecutor js1 = (JavascriptExecutor) driver;
		js1.executeScript("arguments[0].click();", filterOptions);
		Thread.sleep(1000);
		js1.executeScript("arguments[0].click();", exportReviewData);
	}

	public void RespondersOptions() {
		// driver.navigate().refresh();
		boolean Option = driver.findElement(By.xpath("//article[1]//div[1]//div[1]//div[3]//div[1]//button[1]")).isDisplayed();
		Assert.assertTrue(Option);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}
	}

	public void VerifyRespondersOptionFlagReviews() {

		String Flag = driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(Flag, "Flag Review");

		WebElement Flags = driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]"));
		Assert.assertTrue(Flags.isEnabled());

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		WebElement Reviews = driver.findElement(By.xpath("//div[starts-with(@class,'tile-srrtextcontainer sc-')]"));
		Assert.assertTrue(Reviews.isDisplayed());

		WebElement ReviewFlags = driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]"));
		Assert.assertTrue(ReviewFlags.isEnabled());

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();
	}

	public void VerifyGoToReviewSite() throws InterruptedException {
		Thread.sleep(2000);
		/*
		 * RespondBTN.click(); Thread.sleep(1500);
		 */
		String ReviewSite = driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).getText();
		Assert.assertEquals(ReviewSite, "Go to Review Site");

		WebElement ReviewSites = driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]"));
		Assert.assertTrue(ReviewSites.isEnabled());

		driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).click();
		ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
		driver.switchTo().window(tabs2.get(1));
		Thread.sleep(2000);
		driver.close();
		driver.switchTo().window(tabs2.get(0));

	}

	public void VerifyReviewHistory() throws InterruptedException {

		Thread.sleep(2000);
		// RespondBTN.click();

		String ReviewHistory = driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).getText();
		Assert.assertEquals(ReviewHistory, "Review History");

		WebElement ReviewHistorys = driver.findElement(By.xpath("//div[contains(text(),'Review History')]"));
		Assert.assertTrue(ReviewHistorys.isEnabled());

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();

		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");

		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();
	}

	public void VerifyShareReview() throws InterruptedException {

		Thread.sleep(2000);
		// RespondBTN.click();

		String ReviewHistory = driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).getText();
		Assert.assertEquals(ReviewHistory, "Share Review");

		WebElement ReviewHistorys = driver.findElement(By.xpath("//div[contains(text(),'Share Review')]"));
		Assert.assertTrue(ReviewHistorys.isEnabled());

		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

		// driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

	}

	public void ClickOnSavedReviews() throws InterruptedException {
		// ReviewOptions.click();
		Thread.sleep(2000);
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[contains(text(),'Saved Reviews')]")).click();
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		Thread.sleep(1500);
		// RespondBTN.click();
		// driver.findElement(By.xpath("//div[contains(text(),'Review
		// History')]")).click();
		String Histroy = driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).getText();
		Assert.assertEquals(Histroy, "Review History");

		String Share = driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).getText();
		Assert.assertEquals(Share, "Share Review");
		// Pending To Check Functionality of History and Share
	}

	public void ClickOnWaitingForApproval() throws InterruptedException {
		// ReviewOptions.click();
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		driver.findElement(By.xpath("//div[contains(text(),'Waiting For Approval')]")).click();
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		Thread.sleep(1500);
		// RespondBTN.click();

		driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).click();
		ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
		driver.switchTo().window(tabs2.get(1));
		Thread.sleep(2000);
		driver.close();
		driver.switchTo().window(tabs2.get(0));

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();
		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");

		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Edit')]")).click();
		String Internal = driver.findElement(By.xpath("//div[contains(text(),'Internal Note')]")).getText();
		Assert.assertEquals(Internal, "Internal Note");

		driver.findElement(By.xpath("//textarea[@placeholder='Enter your internal note here...']")).sendKeys("Test");

		String Cancel2 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel2, "CANCEL");

		String Save = driver.findElement(By.xpath("//span[contains(text(),'Save')]")).getText();
		Assert.assertEquals(Save, "SAVE");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();
		Thread.sleep(1500);
		RespondBTN.click();

		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement Delete = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(text(),'Delete')]")));
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].click();", Delete);

		String DeletePopUp = driver.findElement(By.xpath("//h3[contains(text(),'Delete Review Response')]")).getText();
		Assert.assertTrue(DeletePopUp.contains("Delete Review Response"));

		String No = driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][3]")).getText();
		Assert.assertEquals(No, "NO");

		String Yes = driver.findElement(By.xpath("//span[contains(text(),'Yes')]")).getText();
		Assert.assertEquals(Yes, "YES");

		driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][3]")).click();

	}

	public void ClickOnApprovalHistory() throws InterruptedException {
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		driver.findElement(By.xpath("//div[contains(text(),'Approval History')]")).click();
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		Thread.sleep(1500);
		RespondBTN.click();
		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).click();

		ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
		driver.switchTo().window(tabs2.get(1));
		Thread.sleep(2000);
		driver.close();
		driver.switchTo().window(tabs2.get(0));

		String edit = driver.findElement(By.xpath("//div[contains(text(),'Edit')]")).getText();
		Assert.assertEquals(edit, "Edit");

		String history = driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).getText();
		Assert.assertEquals(history, "Review History");

		String share = driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).getText();
		Assert.assertEquals(share, "Share Review");
		// Pending To Check Functionality of Edit,History and Share
	}

	public void ClickOnRespondedReviews() throws InterruptedException {
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		driver.findElement(By.xpath("//div[contains(text(),'Responded Reviews')]")).click();
		Thread.sleep(3000);
		// driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();

		Thread.sleep(3000);
		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Google')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// RespondBTN.click();
		Thread.sleep(1500);

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();

		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");

		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[contains(text(),'Edit')]")).click();
		String Internal = driver.findElement(By.xpath("//div[contains(text(),'Internal Note')]")).getText();
		Assert.assertEquals(Internal, "Internal Note");

		driver.findElement(By.xpath("//textarea[@placeholder='Enter your internal note here...']")).sendKeys("Test");

		String Cancel2 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel2, "CANCEL");

		String Save = driver.findElement(By.xpath("//span[contains(text(),'Save')]")).getText();
		Assert.assertEquals(Save, "SAVE");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();
		Thread.sleep(1500);
		RespondBTN.click();

		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement Delete = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(text(),'Delete')]")));
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].click();", Delete);

		String DeletePopUp = driver.findElement(By.xpath("//h3[contains(text(),'Delete Review Response')]")).getText();
		Assert.assertTrue(DeletePopUp.contains("Delete Review Response"));

		String No = driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).getText();
		Assert.assertEquals(No, "NO");

		String Yes = driver.findElement(By.xpath("//span[contains(text(),'Yes')]")).getText();
		Assert.assertEquals(Yes, "YES");

		driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).click();
	}

	public void ClickOnFlaggedReviews() throws InterruptedException {
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		driver.findElement(By.xpath("//div[contains(text(),'Flagged Reviews')]")).click();
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// RespondBTN.click();
		Thread.sleep(1500);

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();

		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");

		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[contains(text(),'Edit')]")).click();
		String Internal = driver.findElement(By.xpath("//div[contains(text(),'Internal Note')]")).getText();
		Assert.assertEquals(Internal, "Internal Note");

		driver.findElement(By.xpath("//textarea[@placeholder='Enter your internal note here...']")).sendKeys("Test");

		String Cancel2 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel2, "CANCEL");

		String Save = driver.findElement(By.xpath("//span[contains(text(),'Save')]")).getText();
		Assert.assertEquals(Save, "SAVE");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();
		Thread.sleep(1500);
		RespondBTN.click();

		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement Delete = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(text(),'Delete')]")));
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].click();", Delete);

		String DeletePopUp = driver.findElement(By.xpath("//h3[contains(text(),'Delete Review Response')]")).getText();
		Assert.assertTrue(DeletePopUp.contains("Delete Review Response"));

		String No = driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).getText();
		Assert.assertEquals(No, "NO");

		String Yes = driver.findElement(By.xpath("//span[contains(text(),'Yes')]")).getText();
		Assert.assertEquals(Yes, "YES");

		driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).click();

	}

	public void ClickOnAllReviews() throws InterruptedException {
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		driver.findElement(By.xpath("//div[contains(text(),'All Reviews')]")).click();
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// RespondBTN.click();
		Thread.sleep(1500);

		driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).click();
		ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
		driver.switchTo().window(tabs2.get(1));
		Thread.sleep(2000);
		driver.close();
		driver.switchTo().window(tabs2.get(0));

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();
		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");

		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();
		// driver.findElement(By.xpath("//div[contains(text(),'302,583')]")).click();

	}

	public void VerifyDefaultReviewText() {
		String defReviewText = driver.findElement(By.xpath("//span[contains(text(),'Review Text')]")).getText();
		Assert.assertEquals(defReviewText, "Review Text");
		System.out.println("Default ReviewText is ==> " + defReviewText);
	}

	public void AllReviews() throws InterruptedException {

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[starts-with(@class,'filtertext sc-')]")).click();
		driver.findElement(By.xpath("//div[contains(text(),'All Reviews')]")).click();
		String reviewText = driver.findElement(By.xpath("//span[contains(text(),'Review Text')]")).getText();
		Assert.assertEquals(reviewText, "Review Text");
		System.out.println("It displays 'Review Text' on selecting 'All Review'");
	}

	public void VerifyRespondFeature() {
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver.findElement(By.xpath("//i[starts-with(@class,'material-icons sc-')]")).click();
		driver.findElement(By.xpath("//div[contains(text(),'Response Required')]")).click();
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		driver.findElement(By.xpath("//*[@class='actionviewstream']")).click();
		WebElement element = driver.findElement(By.xpath("//span[contains(text(),'Respond')]"));
		TestUtility.clickOn(driver, element, 60);

		driver.findElement(By.name("responseTextarea")).sendKeys("Test Message");

		driver.findElement(By.name("responseTextarea")).sendKeys(Keys.BACK_SPACE);
		driver.findElement(By.name("responseTextarea")).sendKeys(Keys.BACK_SPACE);
		driver.findElement(By.name("responseTextarea")).sendKeys(Keys.BACK_SPACE);
		driver.findElement(By.name("responseTextarea")).sendKeys(Keys.BACK_SPACE);
		driver.findElement(By.name("responseTextarea")).sendKeys(Keys.BACK_SPACE);

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();
	}

	public void VerifySourceProvider() throws Exception {
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();

		Thread.sleep(5000);
		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Google')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);
	}

	public void CheckGoogleImage() throws Exception {
		Thread.sleep(3000);

		WebDriverWait wait = new WebDriverWait(driver, 30);

		WebElement ImageFile = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//img[@src='/img/logos/Google.png']")));

		Boolean ImagePresent = (Boolean) ((JavascriptExecutor) driver).executeScript(
				"return arguments[0].complete && typeof arguments[0].naturalWidth != \"undefined\" && arguments[0].naturalWidth > 0",
				ImageFile);
		if (!ImagePresent) {
			System.out.println("Google image not displayed.");
		} else {
			System.out.println("Google image displayed.");
		}
	}

	public void checkFacebookImage() throws Exception {
		Thread.sleep(3000);
		WebElement sourceProvider = driver
				.findElement(By.xpath("//a[starts-with(@class,'bqltoggle fltr-opt-source sc-')]"));
		TestUtility.clickOn(driver, sourceProvider, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Google')]")).click();

		driver.findElement(By.xpath("//label[contains(text(),'Facebook')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);

		WebDriverWait wait = new WebDriverWait(driver, 30);

		WebElement ImageFile = wait.until(
				ExpectedConditions.visibilityOfElementLocated(By.xpath("//img[@src='/img/logos/Facebook.png']")));

		Boolean ImagePresent = (Boolean) ((JavascriptExecutor) driver).executeScript(
				"return arguments[0].complete && typeof arguments[0].naturalWidth != \"undefined\" && arguments[0].naturalWidth > 0",
				ImageFile);
		if (!ImagePresent) {
			System.out.println("Facebook image not displayed.");
		} else {
			System.out.println("Facebook image displayed.");
		}
	}

	public void checkYelpImage() throws Exception {
		Thread.sleep(3000);
		WebElement sourceProvider = driver
				.findElement(By.xpath("//a[starts-with(@class,'bqltoggle fltr-opt-source sc-')]"));
		TestUtility.clickOn(driver, sourceProvider, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Facebook')]")).click();

		driver.findElement(By.xpath("//label[contains(text(),'Yelp')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);
		Thread.sleep(4000);
		WebElement ImageFile = driver.findElement(By.xpath("//img[@src='/img/logos/Yelp.png']"));

		Boolean ImagePresent = (Boolean) ((JavascriptExecutor) driver).executeScript(
				"return arguments[0].complete && typeof arguments[0].naturalWidth != \"undefined\" && arguments[0].naturalWidth > 0",
				ImageFile);
		Assert.assertTrue(ImageFile.isDisplayed());
		if (!ImagePresent) {
			System.out.println("Yelp image not displayed.");
		} else {
			System.out.println("Yelp image displayed.");
		}
	}

	public void verifyYelpSubmitOption() {

		driver.findElement(By.xpath("//span[contains(text(),'Respond')]")).click();

		String goToYelpBtn = driver.findElement(By.xpath("//span[contains(text(),'Yelp')]")).getText();
		System.out.println("For Yelp Review it displayed " + goToYelpBtn);
		Assert.assertEquals(goToYelpBtn, "GO TO YELP");

	}

	public void checkTripAdvisorImage() throws Exception {
		Thread.sleep(3000);
		WebElement sourceProvider = driver
				.findElement(By.xpath("//a[starts-with(@class,'bqltoggle fltr-opt-source sc-')]"));
		TestUtility.clickOn(driver, sourceProvider, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Yelp')]")).click();

		driver.findElement(By.xpath("//label[contains(text(),'TripAdvisor')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);
		Thread.sleep(4000);
		WebElement ImageFile = driver.findElement(By.xpath("//img[@src='/img/logos/TripAdvisor.png']"));

		Boolean ImagePresent = (Boolean) ((JavascriptExecutor) driver).executeScript(
				"return arguments[0].complete && typeof arguments[0].naturalWidth != \"undefined\" && arguments[0].naturalWidth > 0",
				ImageFile);
		Assert.assertTrue(ImageFile.isDisplayed());
		if (!ImagePresent) {
			System.out.println("TripAdvisor image not displayed.");
		} else {
			System.out.println("TripAdvisor image displayed.");
		}

		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	}

	public void verifyTripAdvisorSubmitOption() {

		driver.findElement(By.xpath("//span[contains(text(),'Respond')]")).click();

		String goToTripAdvisorBtn = driver.findElement(By.xpath("//span[contains(text(),'Go to  Tripadvisor')]"))
				.getText();
		System.out.println("For TripAdvisor Review it displayed " + goToTripAdvisorBtn);
		Assert.assertEquals(goToTripAdvisorBtn, "GO TO TRIPADVISOR");

	}

	public void googleSourceProvider() throws Exception {
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		WebElement sourceProvider = driver
				.findElement(By.xpath("//a[starts-with(@class,'bqltoggle fltr-opt-source sc-')]"));
		TestUtility.clickOn(driver, sourceProvider, 30);
		driver.findElement(By.xpath("//label[contains(text(),'TripAdvisor')]")).click();
		driver.findElement(By.xpath("//label[contains(text(),'Google')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);

	}

	public void VerifyTotalReviewsFor10() {

		Select drpCountry = new Select(
				driver.findElement(By.xpath("//select[starts-with(@class,'review-selectsmall sc-')]")));
		drpCountry.selectByValue("10");

		List<WebElement> elements = driver.findElements(By.xpath("//div[starts-with(@class,'tile-company')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Review Records List : " + elements.get(i).getText());
		}
	}

	public void VerifyTotalReviewsFor25() {

		Select drpCountry = new Select(
				driver.findElement(By.xpath("//select[starts-with(@class,'review-selectsmall sc-')]")));
		drpCountry.selectByValue("25");

		List<WebElement> elements = driver.findElements(By.xpath("//div[starts-with(@class,'tile-company')]"));
		System.out.println("Number of elements:" + elements.size());

	}

	public void VerifyTotalReviewsFor50() {

		Select drpCountry = new Select(
				driver.findElement(By.xpath("//select[starts-with(@class,'review-selectsmall sc-')]")));
		drpCountry.selectByValue("50");

		List<WebElement> elements = driver.findElements(By.xpath("//div[starts-with(@class,'tile-company')]"));
		System.out.println("Number of elements:" + elements.size());

	}

	public void VerifyTotalReviewsFor100() {

		Select drpCountry = new Select(
				driver.findElement(By.xpath("//select[starts-with(@class,'review-selectsmall sc-')]")));
		drpCountry.selectByValue("100");

		List<WebElement> elements = driver.findElements(By.xpath("//div[starts-with(@class,'tile-company')]"));
		System.out.println("Number of elements:" + elements.size());

	}

	public void VerifyTagsFunctionality() throws Exception {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		WebElement showTags = driver.findElement(By.xpath("//button[starts-with(@class,'review-showtags sc-')]"));
		js.executeScript("arguments[0].click();", showTags);

		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	}

	public void AddFilter() {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		WebElement mainMenu = driver.findElement(By.xpath("//a[starts-with(@class,'filter-add sc-')]"));
		js.executeScript("arguments[0].click();", mainMenu);

		WebElement addFilterOption = driver.findElement(By.xpath("//select[@id='adtlFiltOpts']"));
		js.executeScript("arguments[0].click();", addFilterOption);

		WebElement mySelectElement = driver.findElement(By.xpath("//select[@id='adtlFiltOpts']"));
		Select dropdown = new Select(mySelectElement);
		dropdown.selectByVisibleText("Author");

		driver.findElement(By.xpath("//input[@id='adtlOptTxt']")).sendKeys("Richard Y.");

		WebElement applyBtn = driver.findElement(By.xpath("//a[@id='adtlOptApplyBtn']"));
		TestUtility.clickOn(driver, applyBtn, 30);

		String addFilter = driver.findElement(By.xpath("//span[contains(text(),'Author')]")).getText();
		Assert.assertEquals(addFilter, "Author");
		System.out.println(addFilter + " filter gets added ");
	}

	public void RemoveFilter() {
		driver.findElement(By.xpath("//a[@id='fltrOptAuthor']")).click();
		WebElement removeFilter = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownwrapperactioncenter sc-')][6]"));
		removeFilter.click();
		System.out.println("Added Filter gets Removed successfully");

	}
	
	public void ClickOnRespondedReviewsForGoogle() throws InterruptedException {
		Thread.sleep(3000);
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		driver.findElement(By.xpath("//div[contains(text(),'Responded Reviews')]")).click();
		Thread.sleep(3000);

		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();

		Thread.sleep(5000);
		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Google')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);

		// Flag Reviews
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// Review History

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();
		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");

		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		// Share Reviews

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

		// Edit

		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[contains(text(),'Edit')]")).click();
		String Internal = driver.findElement(By.xpath("//div[contains(text(),'Internal Note')]")).getText();
		Assert.assertEquals(Internal, "Internal Note");

		driver.findElement(By.xpath("//textarea[@placeholder='Enter your internal note here...']")).sendKeys("Test");

		String Cancel2 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel2, "CANCEL");

		String Save = driver.findElement(By.xpath("//span[contains(text(),'Save')]")).getText();
		Assert.assertEquals(Save, "SAVE");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// Delete

		Thread.sleep(1500);
		RespondBTN.click();

		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement Delete = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(text(),'Delete')]")));
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].click();", Delete);

		String DeletePopUp = driver.findElement(By.xpath("//h3[contains(text(),'Delete Review Response')]")).getText();
		Assert.assertTrue(DeletePopUp.contains("Delete Review Response"));

		String No = driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).getText();
		Assert.assertEquals(No, "NO");

		String Yes = driver.findElement(By.xpath("//span[contains(text(),'Yes')]")).getText();
		Assert.assertEquals(Yes, "YES");

		driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).click();

	}

	public void ClickOnRespondedReviewsForFaceBook() throws InterruptedException {
		
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();

		Thread.sleep(5000);
		WebElement SelectAll = driver.findElement(By.xpath("/descendant::a[contains(text(),'Select All')][3]"));
		TestUtility.clickOn(driver, SelectAll, 30);

		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Facebook')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);

		// Flag Reviews
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// Go To site

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).click();
		ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
		driver.switchTo().window(tabs2.get(1));
		Thread.sleep(2000);
		driver.close();
		driver.switchTo().window(tabs2.get(0));

		// Review History

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();
		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");
		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		// Share Review

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();
	}
	
	public void ClickOnRespondedReviewsForYelp() throws InterruptedException {
		
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		Thread.sleep(3000);
		//driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();
		JavascriptExecutor jk = (JavascriptExecutor) driver;
		WebElement addFilterOption = driver.findElement(By.xpath("//a[@id='fltrOptSource']"));
		jk.executeScript("arguments[0].click();", addFilterOption);
		
		Thread.sleep(5000);
		WebElement SelectAll = driver.findElement(By.xpath("/descendant::a[contains(text(),'Select All')][3]"));
		TestUtility.clickOn(driver, SelectAll, 30);

		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Yelp')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);

		// Flag Reviews
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// Go To site

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).click();
		ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
		driver.switchTo().window(tabs2.get(1));
		Thread.sleep(2000);
		driver.close();
		driver.switchTo().window(tabs2.get(0));

		// Review History

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();
		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");
		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		// Share Review

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

		// Edit

		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[contains(text(),'Edit')]")).click();
		String Internal = driver.findElement(By.xpath("//div[contains(text(),'Internal Note')]")).getText();
		Assert.assertEquals(Internal, "Internal Note");

		//driver.findElement(By.xpath("//textarea[@placeholder='Enter your internal note here...']")).sendKeys("Test");

		String Cancel2 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel2, "CANCEL");

		String Save = driver.findElement(By.xpath("//span[contains(text(),'Yelp')]")).getText();
		Assert.assertEquals(Save, "GO TO YELP");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// Delete

		Thread.sleep(1500);
		RespondBTN.click();

		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement Delete = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(text(),'Delete')]")));
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].click();", Delete);

		String DeletePopUp = driver.findElement(By.xpath("//h3[contains(text(),'Delete Review Response')]")).getText();
		Assert.assertTrue(DeletePopUp.contains("Delete Review Response"));

		String No = driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).getText();
		Assert.assertEquals(No, "NO");

		String Yes = driver.findElement(By.xpath("//span[contains(text(),'Yes')]")).getText();
		Assert.assertEquals(Yes, "YES");

		driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).click();

	}
	
	public void ClickOnFlaggedReviewsForGoogle() throws InterruptedException {
	
		Thread.sleep(3000);
		JavascriptExecutor RO = (JavascriptExecutor) driver;
		RO.executeScript("arguments[0].click();", ReviewOptions);
		driver.findElement(By.xpath("//div[contains(text(),'Flagged Reviews')]")).click();
		Thread.sleep(3000);

		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		//driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();
		JavascriptExecutor jk = (JavascriptExecutor) driver;
		WebElement addFilterOption = driver.findElement(By.xpath("//a[@id='fltrOptSource']"));
		jk.executeScript("arguments[0].click();", addFilterOption);
		
		Thread.sleep(5000);
		WebElement SelectAll = driver.findElement(By.xpath("/descendant::a[contains(text(),'Select All')][3]"));
		TestUtility.clickOn(driver, SelectAll, 30);
		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Google')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);

		// Flag Reviews
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// Review History

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();
		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");
		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		// Share Review

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

		// Edit

		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[contains(text(),'Edit')]")).click();
		String Internal = driver.findElement(By.xpath("//div[contains(text(),'Internal Note')]")).getText();
		Assert.assertEquals(Internal, "Internal Note");

		driver.findElement(By.xpath("//textarea[@placeholder='Enter your internal note here...']")).sendKeys("Test");

		String Cancel2 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel2, "CANCEL");

		String Save = driver.findElement(By.xpath("//span[contains(text(),'Save')]")).getText();
		Assert.assertEquals(Save, "SAVE");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();

		// Delete

		Thread.sleep(1500);
		RespondBTN.click();

		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement Delete = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(text(),'Delete')]")));
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].click();", Delete);

		String DeletePopUp = driver.findElement(By.xpath("//h3[contains(text(),'Delete Review Response')]")).getText();
		Assert.assertTrue(DeletePopUp.contains("Delete Review Response"));

		String No = driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).getText();
		Assert.assertEquals(No, "NO");

		String Yes = driver.findElement(By.xpath("//span[contains(text(),'Yes')]")).getText();
		Assert.assertEquals(Yes, "YES");

		driver.findElement(By.xpath("/descendant::span[contains(text(),'No')][2]")).click();

	}
	
	public void ClickOnFlaggedReviewsForFaceBook() throws InterruptedException {
	
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

		JavascriptExecutor jk = (JavascriptExecutor) driver;
		WebElement addFilterOption = driver.findElement(By.xpath("//a[@id='fltrOptSource']"));
		jk.executeScript("arguments[0].click();", addFilterOption);
		
		Thread.sleep(5000);
		WebElement SelectAll = driver.findElement(By.xpath("/descendant::a[contains(text(),'Select All')][3]"));
		TestUtility.clickOn(driver, SelectAll, 30);
		WebElement clearAll = driver.findElement(By.xpath("//a[contains(text(),'Clear All')]"));
		TestUtility.clickOn(driver, clearAll, 30);

		driver.findElement(By.xpath("//label[contains(text(),'Facebook')]")).click();

		WebElement applyBtn = driver
				.findElement(By.xpath("/descendant::a[starts-with(@class,'dropdownapplyaction sc-')][4]"));
		TestUtility.clickOn(driver, applyBtn, 30);

		// Flag Reviews
		Thread.sleep(3000);
		RespondBTN.click();

		List<WebElement> elements = driver.findElements(By.xpath("//div[contains(@role,'presentation')]"));
		System.out.println("Number of elements:" + elements.size());

		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Responders Option List : " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'Flag Review')]")).click();

		String Cancel = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel, "CANCEL");

		String FlagReview = driver.findElement(By.xpath("//span[contains(text(),'Flag Review')]")).getText();
		Assert.assertEquals(FlagReview, "FLAG REVIEW");

		driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).click();
		
		// Go To site

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Go to Review Site')]")).click();
		ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
		driver.switchTo().window(tabs2.get(1));
		Thread.sleep(2000);
		driver.close();
		driver.switchTo().window(tabs2.get(0));

		// Review History

		driver.findElement(By.xpath("//div[contains(text(),'Review History')]")).click();
		String History = driver.findElement(By.xpath("//h3[contains(text(),'Review History')]")).getText();
		Assert.assertTrue(History.contains("Review History"));

		String response = driver.findElement(By.xpath("//h4[contains(text(),'# responses')]")).getText();
		Assert.assertEquals(response, "# responses");
		driver.findElement(By.xpath("//span[contains(text(),'Close')]")).click();

		// Share Review

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[contains(text(),'Share Review')]")).click();

		String Share = driver.findElement(By.xpath("//h3[contains(text(),'Share Review')]")).getText();
		Assert.assertTrue(Share.contains("Share Review"));

		driver.findElement(By.xpath("//input[@placeholder='Enter Email Address...']")).sendKeys("sachin@testriq.com");
		driver.findElement(By.xpath("/descendant::i[contains(text(),'add')][5]")).click();

		driver.findElement(By.xpath("//textarea[@placeholder='Enter message...']"))
				.sendKeys("Review Test Option Check");

		String Cancel1 = driver.findElement(By.xpath("//span[contains(text(),'Cancel')]")).getText();
		Assert.assertEquals(Cancel1, "CANCEL");

		String Share1 = driver.findElement(By.xpath("//span[contains(text(),'Share')]")).getText();
		Assert.assertEquals(Share1, "SHARE");

		driver.findElement(By.xpath("//span[contains(text(),'Share')]")).click();

	}
	
	public void ClickOnFlaggedReviewsForTripAdvisor() throws InterruptedException {
	
		
		
		
		
	}

}

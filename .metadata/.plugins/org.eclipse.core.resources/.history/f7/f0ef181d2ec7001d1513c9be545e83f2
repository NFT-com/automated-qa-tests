package com.nft.qa.pages;

import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchSessionException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.nft.qa.base.TestBase;
import com.nft.qa.util.TestUtility;

public class Ratings extends TestBase {

	TestUtility testUtil = new TestUtility();
	HomePage homePage = new HomePage();

	public Ratings() {

		PageFactory.initElements(driver, this);

	}

	public void selectCheesecake() throws Exception {

		Thread.sleep(5000);
		homePage.clickOnContextAndSelectCheesecake();
		String LocationName = driver.findElement(By.xpath("//div[contains(text(),'Cheesecake Factory')]")).getText();
		System.out.println("Location Name : " + LocationName);

	}

	public void ClickOnReviews() throws Exception {
		Thread.sleep(5000);
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		WebElement locator = driver.findElement(By.xpath("//div[contains(text(),'REVIEWS')]"));
		new WebDriverWait(driver, 60).ignoring(NoSuchSessionException.class)
				.until(ExpectedConditions.elementToBeClickable(locator));
		locator.click();
	}

	public void ClickOnRatingsFilterforGoogle() throws Exception {

		Thread.sleep(3000);
		WebDriverWait wait = new WebDriverWait(driver, 30);
		wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		Thread.sleep(3000);
		driver.findElement(By.xpath("//a[starts-with(@class,'bqltoggle sc-')]")).click();
		Thread.sleep(3000);
		driver.findElement(By.xpath("//label[@for='star4']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][5]")).click();
		wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[@id='fltrOptPublisher']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Select All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Clear All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//input[@id='Google']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][4]")).click();
		wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));

	}

	public void Verify_4Star_RatingsFilterForGoogle() throws Exception {

		WebElement SelectedRating1 = driver.findElement(By.xpath(
				"/descendant::span[starts-with(@class,'singleselection sc-')]//span[@class='material-icons star active'][1]"));
		WebElement SelectedRating2 = driver.findElement(By.xpath(
				"/descendant::span[starts-with(@class,'singleselection sc-')]//span[@class='material-icons star active'][2]"));
		WebElement SelectedRating3 = driver.findElement(By.xpath(
				"/descendant::span[starts-with(@class,'singleselection sc-')]//span[@class='material-icons star active'][3]"));
		WebElement SelectedRating4 = driver.findElement(By.xpath(
				"/descendant::span[starts-with(@class,'singleselection sc-')]//span[@class='material-icons star active'][4]"));
		SelectedRating1.isSelected();
		SelectedRating2.isSelected();
		SelectedRating3.isSelected();
		SelectedRating4.isSelected();

		WebElement Star1 = driver.findElement(
				By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]//i[@color='#EB6E00'][1]"));
		WebElement Star2 = driver.findElement(
				By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]//i[@color='#EB6E00'][2]"));
		WebElement Star3 = driver.findElement(
				By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]//i[@color='#EB6E00'][3]"));
		WebElement Star4 = driver.findElement(
				By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]//i[@color='#EB6E00'][4]"));
		Star1.isDisplayed();
		Star2.isDisplayed();
		Star3.isDisplayed();
		Star4.isDisplayed();
	}

	public void ClickOnRatingsFilterforYelp() throws Exception {

		Thread.sleep(3000);
		WebDriverWait wait = new WebDriverWait(driver, 30);

		driver.findElement(By.xpath("//a[@id='fltrOptPosting Date']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[contains(text(),'All Time')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][1]")).click();
		Thread.sleep(4000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));

		driver.findElement(By.xpath("//a[starts-with(@class,'bqltoggle sc-')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[starts-with(@class,'ratings ratings-container sc-')]//a[contains(text(),'Select All')]"))
				.click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[starts-with(@class,'ratings ratings-container sc-')]//a[contains(text(),'Clear All')]"))
				.click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//label[@for='star2']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][5]")).click();
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[@id='fltrOptPublisher']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Select All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Clear All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//input[@id='Yelp']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][4]")).click();
		Thread.sleep(4000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		
	}

	public void Verify_2Star_RatingsFilterForYelp() throws Exception {

		WebElement SelectedRating1 = driver.findElement(By.xpath(
				"/descendant::span[starts-with(@class,'singleselection sc-')]//span[@class='material-icons star active'][1]"));
		WebElement SelectedRating2 = driver.findElement(By.xpath(
				"/descendant::span[starts-with(@class,'singleselection sc-')]//span[@class='material-icons star active'][2]"));
		SelectedRating1.isSelected();
		SelectedRating2.isSelected();

		WebElement Star1 = driver.findElement(By.xpath(
				"/descendant::div[starts-with(@class,'tile-body sc-')][1]//i[starts-with(@class,'yp-star-2  sc-')][1]"));
		WebElement Star2 = driver.findElement(By.xpath(
				"/descendant::div[starts-with(@class,'tile-body sc-')][1]//i[starts-with(@class,'yp-star-2  sc-')][2]"));
		WebElement NullStar3 = driver.findElement(By.xpath(
				"/descendant::div[starts-with(@class,'tile-body sc-')][1]//i[starts-with(@class,'yp-star-0  sc-')][1]"));
		Star1.isDisplayed();
		Star2.isDisplayed();
		NullStar3.isDisplayed();
	}

	public void ClickOnRatingsFilterforFacebook() throws Exception {

		driver.navigate().refresh();
		Thread.sleep(4000);
		WebDriverWait wait = new WebDriverWait(driver, 30);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[@id='fltrOptPosting Date']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[contains(text(),'All Time')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][1]")).click();
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));

		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[starts-with(@class,'bqltoggle sc-')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//input[@id='recommended']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][5]")).click();
		Thread.sleep(3000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[@id='fltrOptPublisher']")).click();
		Thread.sleep(3000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Select All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Clear All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//input[@id='Facebook']")).click();
		Thread.sleep(3000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][4]")).click();
		Thread.sleep(4000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		Thread.sleep(2000);
		
	}

	public void Verify_Recommended_RatingsFilterForFacebook() throws Exception {

		WebElement Ratings_Recommended = driver.findElement(By.xpath("//span[contains(text(),'Recommended')]"));
		Ratings_Recommended.isSelected();

		WebElement Recommended = driver.findElement(By.xpath(
				"/descendant::div[starts-with(@class,'tile-body sc-')]//i[starts-with(@class,'fb-recommend  sc-')]"));
		Recommended.isDisplayed();
	}

	public void ClickOnRatingsFilterforFacebook_NotRecommended() throws Exception {
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		Thread.sleep(3000);
		driver.findElement(By.xpath("//a[@id='fltrOptPosting Date']")).click();
		Thread.sleep(3000);
		driver.findElement(By.xpath("//a[contains(text(),'All Time')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][1]")).click();
		Thread.sleep(3000);

		wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));

		Thread.sleep(3000);
		driver.findElement(By.xpath("//a[starts-with(@class,'bqltoggle sc-')]")).click();
		Thread.sleep(3000);
		driver.findElement(By.xpath("//div[starts-with(@class,'ratings ratings-container sc-')]//a[contains(text(),'Clear All')]"))
				.click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//div[starts-with(@class,'ratings ratings-container sc-')]//a[contains(text(),'Clear All')]"))
				.click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//input[@id='not_recommended']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][5]")).click();
		Thread.sleep(3000);
		
		wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[@id='fltrOptPublisher']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Select All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//li[@id='Publisher']//a[contains(text(),'Clear All')]")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("//input[@id='Facebook']")).click();
		Thread.sleep(2000);
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][4]")).click();
		wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/descendant::div[starts-with(@class,'tile-body sc-')][1]")));
		
	}

	public void Verify_NotRecommended_RatingsFilterForFacebook() throws Exception {

		WebElement Ratings_NotRecommended = driver.findElement(By.xpath("//span[contains(text(),'Not Recommended')]"));
		Ratings_NotRecommended.isSelected();

		WebElement NotRecommended = driver.findElement(By.xpath(
				"/descendant::div[starts-with(@class,'tile-body sc-')]//i[starts-with(@class,'fb-unrecommend  sc-')]"));
		NotRecommended.isDisplayed();
	}

}

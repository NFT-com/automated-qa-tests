package com.nft.qa.pages;


import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.testng.Assert;

import com.nft.qa.base.TestBase;
import com.nft.qa.util.TestUtility;

public class LocationPage_TestRail  extends TestBase {
	
	TestUtility testUtil = new TestUtility();
	HomePage homePage = new HomePage();
	
	@FindBy(xpath = "//i[contains(text(),'language')]")
	WebElement context;
	
	@FindBy(xpath = "//i[starts-with(@class,'location-group-icon  sc-')]")
	WebElement Single_context;

	@FindBy(xpath = "//input[contains(@placeholder,'Select Accounts')]")
	WebElement selectAccounts;

	@FindBy(xpath = "//div[contains(text(),'Cheesecake Factory')]")
	WebElement cheesecake;
	
	@FindBy(xpath = "//span[contains(text(),'Jack Belk')]")
	WebElement SingleLocation;
	
	@FindBy(xpath = "//div[starts-with(@class,'cs-alllocations sc-')]//div[contains(text(),'All Locations')]")
	WebElement AllLocation;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[1]/ul/li[2]/div/div[1]/div")
	WebElement Profile;
	
	@FindBy(xpath = "//div[contains(text(),'Accounts')]")
	WebElement Profile_Accounts;
	
	@FindBy(xpath = "//div[contains(text(),'Entitlements')]")
	WebElement Profile_Accounts_EntitlementsTab;
	
	@FindBy(xpath = "//button[@type='submit']")
	WebElement Entitlement_UpdateBtn;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/label/span")
	WebElement Entitlement_Location_CheckBox;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/div/span")
	WebElement Entitlement_Location;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/div/div/div/div[1]/div/label/span")
	WebElement Entitlement_Location_Section_Checkbox;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/div/div/div/div[1]/div/div/span")
	WebElement Entitlement_Location_Section;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/div/div/div/div[1]/div/div/div/div/div/div[2]/label/span")
	WebElement Entitlement_Create_CheckBox;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/div/div/div/div[1]/div/div/div/div/div/div[3]/label/span")
	WebElement Entitlement_Delete_CheckBox;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/div/div/div/div[1]/div/div/div/div/div/div[5]/label/span")
	WebElement Entitlement_Read_CheckBox;
	
	@FindBy(xpath = "/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[1]/div/div/div/div/div[1]/div/div/div/div/div/div[8]/label/span")
	WebElement Entitlement_Update_CheckBox;
	
	@FindBy(xpath = "//a[@id='fltrOptName']")
	WebElement Overview_Filter_Name;
	
	@FindBy(xpath = "//a[@id='fltrOptAddress 1']")
	WebElement Overview_Filter_Address1;
	
	@FindBy(xpath = "//a[@id='fltrOptCity']")
	WebElement Overview_Filter_City;
	
	@FindBy(xpath = "//a[@id='fltrOptState']")
	WebElement Overview_Filter_State;
	
	@FindBy(xpath = "//a[@id='fltrOptPostal Code']")
	WebElement Overview_Filter_PostalCode;
	
	@FindBy(xpath = "//a[@id='filterAdd']")
	WebElement Overview_Filter_AddFilter;
	
	@FindBy(xpath = "//select[@id='adtlFiltOpts']")
	WebElement Overview_Filter_SelectFilter;
	
	@FindBy(xpath = "//option[contains(text(),'Address 2')]")
	WebElement Overview_Filter_Address2;
	
	@FindBy(xpath = "//option[contains(text(),'Country')]")
	WebElement Overview_Filter_Country;
	
	@FindBy(xpath = "//option[contains(text(),'Tags')]")
	WebElement Overview_Filter_Tags;
	
	@FindBy(xpath = "//option[contains(text(),'Client Key')]")
	WebElement Overview_Filter_ClientKey;
	
	@FindBy(xpath = "//option[contains(text(),'Date Created')]")
	WebElement Overview_Filter_DateCreated;
	
	@FindBy(xpath = "//option[contains(text(),'Date Updated')]")
	WebElement Overview_Filter_DateUpdated;
	
	@FindBy(xpath = "//option[contains(text(),'Facebook Status')]")
	WebElement Overview_Filter_Facebook;
	
	@FindBy(xpath = "//option[contains(text(),'Foursquare Status')]")
	WebElement Overview_Filter_Foursquare;
	
	@FindBy(xpath = "//option[contains(text(),'Yelp Status')]")
	WebElement Overview_Filter_Yelp;
	
	@FindBy(xpath = "//option[contains(text(),'locationaccess')]")
	WebElement Overview_Filter_locationaccess;
	
	@FindBy(xpath = "//a[@id='adtlOptApplyBtn']")
	WebElement Overview_Filter_ApplyBtn;
	
	@FindBy(xpath = "//a[@id='adtlOptCancelBtn']")
	WebElement Overview_Filter_CancelBtn;
	
	@FindBy(xpath = "//div[contains(@class,'gm-style-mtc')]//div[contains(text(),'Map')]")
	WebElement Overview_MapView;
	
	@FindBy(xpath = "//div[contains(text(),'Satellite')]")
	WebElement Overview_SatelliteView;
	
	@FindBy(xpath = "//span[contains(text(),'ADD LOCATION')]")
	WebElement Overview_AddLocationBtn;
	
	@FindBy(xpath = "//span[contains(text(),'Search this area')]")
	WebElement Overview_SearchThisArea;
	
	
	
	public LocationPage_TestRail() {
		PageFactory.initElements(driver, this);
	}
	
	
	public void selectCheesecake() throws Exception {
		Thread.sleep(5000);
		homePage.clickOnContextAndSelectCheesecake();
		String LocationName = driver.findElement(By.xpath("//div[contains(text(),'Cheesecake Factory')]")).getText();
		System.out.println("Location Name : " + LocationName);
		System.out.println("***Location is Selected successfully***");

	}
	
	public void Set_Preconditions() throws InterruptedException {
		
		Thread.sleep(5000);
		Profile.click();
		Thread.sleep(1000);
		Profile_Accounts.click();
		Thread.sleep(1000);
		Profile_Accounts_EntitlementsTab.click();
		Thread.sleep(3000);
		System.out.println("***User is Redirected to Accounts Entitlement Page Successfully***");
		Boolean Locationcheckstatus = driver.findElement(By.xpath("//input[@id='entitlements-Location']")).isSelected();
		Thread.sleep(1000);
		if (Locationcheckstatus == true) {
		
		Entitlement_Location.click();
		Thread.sleep(1000);
		Entitlement_Location_Section_Checkbox.click();
		Thread.sleep(1000);
		Entitlement_Location_Section.click();
		Thread.sleep(1000);
		Entitlement_Create_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_Delete_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_Read_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_Update_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_UpdateBtn.click();
		Thread.sleep(3500);
		System.out.println("***Location checkbox Conditions was selected***");
	} else {
		System.out.println("The Location Checkbox was not checked on default");
		Thread.sleep(1000);
		Entitlement_Location.click();
		Thread.sleep(1000);
		Entitlement_Location_Section.click();
		Thread.sleep(1000);
		Entitlement_Create_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_Delete_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_Read_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_Update_CheckBox.click();
		Thread.sleep(1000);
		Entitlement_UpdateBtn.click();
		Thread.sleep(3500);
		System.out.println("***Location checkbox Conditions was now selected***");
	}
	
	WebElement Location = driver.findElement(By.xpath("//div[contains(text(),'LOCATIONS')]"));
	Actions actions = new Actions(driver);
	actions.moveToElement(Location);
	actions.click().build().perform();
	Thread.sleep(2000);

	WebElement Location_Overview = driver.findElement(By.xpath("//div[contains(text(),'Overview')]"));
	TestUtility.clickOn(driver, Location_Overview, 10);
	Thread.sleep(5000);
	System.out.println("***User is Redirected to Locations Page Successfully***");
	}
	
	
	public void C642_VerifyOverviewUI () throws InterruptedException {
		
		WebElement Location = driver.findElement(By.xpath("//div[contains(text(),'LOCATIONS')]"));
		Actions actions = new Actions(driver);
		actions.moveToElement(Location);
		actions.click().build().perform();
		Thread.sleep(2000);

		WebElement Location_Over = driver.findElement(By.xpath("//div[contains(text(),'Overview')]"));
		TestUtility.clickOn(driver, Location_Over, 10);
		Thread.sleep(5000);
		System.out.println("***User is Redirected to Locations Page Successfully***");
		
		
		
		
		
		WebElement Location_Overview = driver.findElement(By.xpath("//div[contains(text(),'Location Overview')]"));
		Assert.assertTrue(Location_Overview.isDisplayed());
		
		//Filter : >
		Assert.assertTrue(Overview_Filter_Name.isDisplayed());
		Assert.assertTrue(Overview_Filter_Address1.isDisplayed());
		Assert.assertTrue(Overview_Filter_City.isDisplayed());
		Assert.assertTrue(Overview_Filter_State.isDisplayed());
		Assert.assertTrue(Overview_Filter_PostalCode.isDisplayed());
		Assert.assertTrue(Overview_Filter_AddFilter.isDisplayed());
		Overview_Filter_AddFilter.click();
		Thread.sleep(1000);
		Overview_Filter_SelectFilter.click();
		Thread.sleep(1000);
		Assert.assertTrue(Overview_Filter_Address2.isDisplayed());
		Assert.assertTrue(Overview_Filter_Country.isDisplayed());
		Assert.assertTrue(Overview_Filter_Tags.isDisplayed());
		Assert.assertTrue(Overview_Filter_ClientKey.isDisplayed());
		Assert.assertTrue(Overview_Filter_DateCreated.isDisplayed());
		Assert.assertTrue(Overview_Filter_DateUpdated.isDisplayed());
		Assert.assertTrue(Overview_Filter_Facebook.isDisplayed());
		Assert.assertTrue(Overview_Filter_Foursquare.isDisplayed());
		Assert.assertTrue(Overview_Filter_Yelp.isDisplayed());
		Assert.assertTrue(Overview_Filter_locationaccess.isDisplayed());
		Overview_Filter_CancelBtn.click();
		Thread.sleep(1000);
		System.out.println("***Overview Tab Filters Are verified successfully***");
		
		//Location list and map view :>
		
		WebElement Overview_LocationSideBar = driver.findElement(By.xpath("//div[@id='locationSideBar']"));
		Assert.assertTrue(Overview_LocationSideBar.isDisplayed());
		System.out.println("***Location List Tab is Displayed successfully***");
		
		// All location list :>
		
		List<WebElement> Locations_List = driver.findElements(By.xpath("//h3[contains(text(),'The Cheesecake Factory #')]"));
		System.out.println("Number of elements:" + Locations_List.size());

		for (int i = 0; i < Locations_List.size(); i++) {
			System.out.println("Top 10 Locations are ==> : " + Locations_List.get(i).getText());
		}
		System.out.println("***All Locations List is Printed successfully***");
		//Map & Satellite view :>
		Assert.assertTrue(Overview_MapView.isDisplayed());
		Assert.assertTrue(Overview_SatelliteView.isDisplayed());
		System.out.println("***Map view & Satellite view is verified successfully***");
		//Add location button :>
		Assert.assertTrue(Overview_AddLocationBtn.isDisplayed());
		System.out.println("***Add New Location Button is Displayed ***");
		
		// Search this area button :>
		Assert.assertTrue(Overview_SearchThisArea.isDisplayed());
		System.out.println("***Search this Area Button is Displayted***");
	}
	
	public void C644_Verifythatlocationslistchangesaccordingtotheselectedcontext () throws InterruptedException {
		Thread.sleep(1500);
		context.click();
		Thread.sleep(1500);
		SingleLocation.click();
		Thread.sleep(3000);
		WebElement SingleSelectedLocation = driver.findElement(By.xpath("//div[contains(text(),'Cheesecake Factory - Jack Belk')]"));
		Assert.assertTrue(SingleSelectedLocation.isDisplayed());
		System.out.println("***Location is Successfully switched to single location***");
		Thread.sleep(2500);
		Single_context.click();
		Thread.sleep(1500);
		AllLocation.click();
		Thread.sleep(3000);
		WebElement AllSelectedLocation = driver.findElement(By.xpath("/descendant::div[contains(text(),'All Locations')][1]"));
		Assert.assertTrue(AllSelectedLocation.isDisplayed());
		System.out.println("***Location is Successfully switched to All location***");
		
	}
	
	
	public void C648_Verifythatpopuisdisplayedifuserclicksonthepinonthemap () throws InterruptedException {
		
		driver.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[2]/div[3]/div[2]/div[1]/div/div/div[1]/div[3]/div/div[3]/div[8]/img")).click();
		Thread.sleep(1500);
		WebElement Edit_Pin = driver.findElement(By.xpath("//i[contains(text(),'edit')]"));
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", Edit_Pin);
		Thread.sleep(1500);
		
		WebElement Location_Name = driver.findElement(By.xpath("//div[contains(text(),'The Cheesecake Factory #')]"));
		Assert.assertTrue(Location_Name.isDisplayed());
		
		WebElement Location_Details = driver.findElement(By.xpath("//div[contains(text(),'Details')]"));
		Assert.assertTrue(Location_Details.isDisplayed());
		
		WebElement Location_Map = driver.findElement(By.xpath("//div[contains(@class,'sc-')][contains(text(),'Map')]"));
		Assert.assertTrue(Location_Map.isDisplayed());
		
		WebElement Location_SEO = driver.findElement(By.xpath("//div[contains(@class,'sc-')][contains(text(),'SEO')]"));
		Assert.assertTrue(Location_SEO.isDisplayed());
		
		WebElement Location_Hours = driver.findElement(By.xpath("//div[contains(text(),'Hours')]"));
		Assert.assertTrue(Location_Hours.isDisplayed());
		
		WebElement Location_Offering = driver.findElement(By.xpath("//div[contains(text(),'Offerings')]"));
		Assert.assertTrue(Location_Offering.isDisplayed());
		
		WebElement Location_Media = driver.findElement(By.xpath("//div[contains(text(),'Media')]"));
		Assert.assertTrue(Location_Media.isDisplayed());
		
		WebElement Location_ProfileURL = driver.findElement(By.xpath("//div[contains(text(),'Profile URLs')]"));
		Assert.assertTrue(Location_ProfileURL.isDisplayed());
		
		WebElement Location_Custom = driver.findElement(By.xpath("//div[contains(text(),'Custom')]"));
		Assert.assertTrue(Location_Custom.isDisplayed());
		
		WebElement Location_History = driver.findElement(By.xpath("//div[contains(@class,'sc-')][contains(text(),'History')]"));
		Assert.assertTrue(Location_History.isDisplayed());
		
		WebElement Location_Internal = driver.findElement(By.xpath("//div[contains(text(),'Internal')]"));
		Assert.assertTrue(Location_Internal.isDisplayed());
		
		WebElement Location_BN = driver.findElement(By.xpath("//div[contains(text(),'Business Name')]"));
		Assert.assertTrue(Location_BN.isDisplayed());
		
		WebElement Location_CK = driver.findElement(By.xpath("//div[contains(text(),'Client Key')]"));
		Assert.assertTrue(Location_CK.isDisplayed());
		
		Thread.sleep(1000);
		WebElement CloseBtn = driver.findElement(By.xpath("/descendant::i[contains(text(),'close')][3]"));
		executor.executeScript("arguments[0].click();", CloseBtn);
	System.out.println("*** pop up is displayed if user clicks on the pin on the map ***");
	}
	
	public void C649_Verifythepagination () throws InterruptedException {
		
		String Pagination = driver.findElement(By.xpath("/descendant::div[starts-with(@class,'with-select sc-')][1]")).getText();
		System.out.println("Pagination selected value is " + Pagination);
		Assert.assertTrue(Pagination.contains("Show 10"));
		
		System.out.println("Pagination is selected on default value i.e. 10");
		
		List<WebElement> Locations_List = driver.findElements(By.xpath("//h3[contains(text(),'The Cheesecake Factory #')]"));
		System.out.println("Number of elements:" + Locations_List.size());
		Assert.assertEquals(10, Locations_List.size());
		for (int i = 0; i < Locations_List.size(); i++) {
			System.out.println("Top 10 Locations are ==> : " + Locations_List.get(i).getText());
		}
		System.out.println("***All 10 Locations List is Printed successfully***");
		
		WebElement pagination = driver.findElement(By.xpath("/descendant::div[starts-with(@class,'with-select sc-')][1]"));
		pagination.click();
		Thread.sleep(1000);
		WebElement Select25 = driver.findElement(By.xpath("//li[contains(text(),'25')]"));
		Assert.assertTrue(Select25.isDisplayed());
		WebElement Select50 = driver.findElement(By.xpath("//li[contains(text(),'50')]"));
		Assert.assertTrue(Select50.isDisplayed());
		WebElement Select100 = driver.findElement(By.xpath("//li[contains(text(),'100')]"));
		Assert.assertTrue(Select100.isDisplayed());
		Thread.sleep(1000);
		Select25.click();
		Thread.sleep(2000);
		List<WebElement> Locations_List_25 = driver.findElements(By.xpath("//h3[contains(text(),'The Cheesecake Factory #')]"));
		System.out.println("Number of elements:" + Locations_List_25.size());
		Assert.assertEquals(25, Locations_List_25.size());
		for (int i = 0; i < Locations_List_25.size(); i++) {
			System.out.println("Top 25 Locations are ==> : " + Locations_List_25.get(i).getText());
		}
		System.out.println("***All 25 Locations List is Printed successfully***");
		
		
		pagination.click();
		Thread.sleep(1000);
		Select50.click();
		Thread.sleep(2000);
		List<WebElement> Locations_List_50 = driver.findElements(By.xpath("//h3[contains(text(),'The Cheesecake Factory #')]"));
		System.out.println("Number of elements:" + Locations_List_50.size());
		Assert.assertEquals(50, Locations_List_50.size());
		for (int i = 0; i < Locations_List_50.size(); i++) {
			System.out.println("Top 50 Locations are ==> : " + Locations_List_50.get(i).getText());
		}
		System.out.println("***All 50 Locations List is Printed successfully***");
		
		
		pagination.click();
		Thread.sleep(1000);
		Select100.click();
		Thread.sleep(2000);
		List<WebElement> Locations_List_100 = driver.findElements(By.xpath("//h3[contains(text(),'The Cheesecake Factory #')]"));
		System.out.println("Number of elements:" + Locations_List_100.size());
		Assert.assertEquals(100, Locations_List_100.size());
		for (int i = 0; i < Locations_List_100.size(); i++) {
			System.out.println("Top 100 Locations are ==> : " + Locations_List_100.get(i).getText());
		}
		System.out.println("***All 100 Locations List is Printed successfully***");
		
	}
	
	
	
	
	

}

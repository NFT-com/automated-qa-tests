package com.nft.qa.pages;

import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.testng.Assert;

import com.b1.qa.util.TestUtility;
import com.nft.qa.base.TestBase;

public class SocialPage extends TestBase {

	TestUtility testUtil = new TestUtility();

	@FindBy(xpath = "/html/body/div/div/div[1]/ul/li[2]/div/div[1]/div")
	WebElement MyProfile;

	@FindBy(xpath = "//div[contains(text(),'Accounts')]")
	WebElement Account;

	@FindBy(xpath = "//div[contains(text(),'Entitlements')]")
	WebElement Entitlements;

	@FindBy(xpath = "//span[contains(text(),'Name')]")
	WebElement Name;

	@FindBy(xpath = "//span[contains(text(),'Address 1')]")
	WebElement Address;

	public SocialPage() {

		PageFactory.initElements(driver, this);
	}

	public void SelectSocialOnEntitlements() {

		TestUtility.clickOn(driver, MyProfile, 30);
		TestUtility.clickOn(driver, Account, 30);
		TestUtility.clickOn(driver, Entitlements, 30);

	}

	public void verifySocialEntitlementsOnCheckBox() throws InterruptedException {

		WebElement UpdateButton = driver.findElement(By.xpath("//button[@type='submit']"));
		Boolean TopicExtractorcheckstatus = driver.findElement(By.xpath("//input[@id='entitlements-Topic Extractor']"))
				.isSelected();
		Thread.sleep(1000);
		if (TopicExtractorcheckstatus == true) {
			System.out.println("TopicExtractor checkbox was selected on default");
		} else {
			System.out.println("The TopicExtractor Checkbox was not checked on default");
			Thread.sleep(1000);
			driver.findElement(By.xpath(
					"/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[2]/div[5]/div/label/span"))
					.click();
			Thread.sleep(1000);
			UpdateButton.click();
			Thread.sleep(1000);
			System.out.println("The TopicExtractor Checkbox is now checked");
		}

		WebElement UpdateButton1 = driver.findElement(By.xpath("//button[@type='submit']"));
		Boolean SocialPostcheckstatus = driver.findElement(By.xpath("//input[@id='entitlements-Social Post']"))
				.isSelected();
		Thread.sleep(1000);
		if (SocialPostcheckstatus == true) {
			System.out.println("SocialPost checkbox was selected on default");
		} else {
			System.out.println("The SocialPost Checkbox was not checked on default");
			Thread.sleep(1000);
			driver.findElement(By.xpath(
					"/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[2]/div[3]/div/label/span"))
					.click();
			Thread.sleep(1000);
			UpdateButton1.click();
			Thread.sleep(1000);
			System.out.println("The SocialPost Checkbox is now checked");
		}

		WebElement UpdateButton2 = driver.findElement(By.xpath("//button[@type='submit']"));
		Boolean TopicMonitorcheckstatus = driver.findElement(By.xpath("//input[@id='entitlements-Topic Monitor']"))
				.isSelected();
		Thread.sleep(1000);
		if (TopicMonitorcheckstatus == true) {
			System.out.println("TopicMonitor checkbox was selected on default");
		} else {
			System.out.println("The TopicMonitor Checkbox was not checked on default");
			Thread.sleep(1000);
			driver.findElement(By.xpath(
					"/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[2]/div[2]/div/label/span"))
					.click();
			Thread.sleep(1000);
			UpdateButton2.click();
			Thread.sleep(1000);
			System.out.println("The TopicMonitor Checkbox is now checked");
		}

		/*WebElement UpdateButton3 = driver.findElement(By.xpath("//button[@type='submit']"));
		Boolean Listingcheckstatus = driver.findElement(By.xpath("//input[@id='entitlements-Listing']")).isSelected();
		Thread.sleep(1000);
		if (Listingcheckstatus == true) {
			System.out.println("Listing checkbox was selected on default");
		} else {
			System.out.println("The Listing Checkbox was not checked on default");
			Thread.sleep(1000);
			driver.findElement(By.xpath(
					"/html/body/div[1]/div/div[2]/div/div[2]/div/div[3]/div/div/div/div[1]/div[1]/div[4]/div/label/span"))
					.click();
			Thread.sleep(1000);
			UpdateButton3.click();
			Thread.sleep(1000);
			System.out.println("The Listing Checkbox is now checked");
		}*/
	}

	public void VerifySocialTabOptions() throws InterruptedException {
		Thread.sleep(2000);
		WebElement SocialnMenu = driver.findElement(By.xpath("//div[contains(text(),'SOCIAL')]"));

		Actions action = new Actions(driver);
		action.moveToElement(SocialnMenu).perform();
		Assert.assertTrue(SocialnMenu.isDisplayed());
		System.out.println("The Social menu is displayed");

		List<WebElement> elements = driver.findElements(
				By.xpath("//div[@class='popover-content sc-kEYyzF copVqa']//div[@class='sc-dymIpo KIFyI']"));
		Thread.sleep(2000);
		System.out.println("Number of elements:" + elements.size());
		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Location Records List have: " + elements.get(i).getText());
		}

		String Option1 = driver.findElement(By.xpath("//div[contains(text(),'Topic Extractor')]")).getText();
		System.out.println("found=========" + Option1);
		Assert.assertEquals("Topic Extractor", Option1);

		String Option2 = driver.findElement(By.xpath("//div[contains(text(),'Topic Monitor')]")).getText();
		System.out.println("found=========" + Option2);
		Assert.assertEquals("Topic Monitor", Option2);

		/*String Option3 = driver.findElement(By.xpath("//div[contains(text(),'Google Q&A')]")).getText();
		System.out.println("found=========" + Option3);
		Assert.assertEquals("Google Q&A", Option3);

		String Option4 = driver.findElement(By.xpath("//div[contains(text(),'Media')]")).getText();
		System.out.println("found=========" + Option4);
		Assert.assertEquals("Media", Option4);
*/
	}

	public void clickOnSocialTopicExtractor() throws Exception {

		driver.findElement(By.xpath("//div[contains(text(),'Topic Extractor')]")).click();
		driver.navigate().refresh();
	}

	public void VerifyTopicExtractor() throws InterruptedException {
		Thread.sleep(3000);

		String nameFilter = driver.findElement(By.xpath("/descendant::div[contains(text(),'Topic Extractor')][2]"))
				.getText();
		Assert.assertEquals(nameFilter, "Topic Extractor");
		System.out.println("Present Tab Name Is ==> " + nameFilter);

	}

	public void VerifyTopicExtractorReport() {

		String nameFilter = driver.findElement(By.xpath("//div[contains(text(),'Publisher:')]")).getText();
		Assert.assertEquals(nameFilter, "Publisher:");
		System.out.println("Present Tab Name Is ==> " + nameFilter);

		WebElement Google = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][@icon='Google']"));
		Assert.assertTrue(Google.isEnabled());

		WebElement FB = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][@icon='Facebook']"));
		Assert.assertTrue(FB.isEnabled());

		WebElement yelp = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][@icon='Yelp']"));
		Assert.assertTrue(yelp.isEnabled());

		WebElement FS = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][@icon='Foursquare']"));
		Assert.assertTrue(FS.isEnabled());

		WebElement MC = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][@icon='Merchant Circle']"));
		Assert.assertTrue(MC.isEnabled());

		WebElement YP = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][@icon='Yellowpages']"));
		Assert.assertTrue(YP.isEnabled());

		WebElement TA = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][@icon='Trip Advisor']"));
		Assert.assertTrue(TA.isEnabled());

		String Complaints = driver.findElement(By.xpath("//div[contains(text(),'What Are People Talking About')]"))
				.getText();
		Assert.assertEquals(Complaints, "What Are People Talking About?");
		System.out.println("Present Tab Name Is ==> " + Complaints);

	}

	public void VerifyUserResponses() {

		String AllResponses = driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'All')]"))
				.getText();
		Assert.assertEquals(AllResponses, "All");
		System.out.println("Present Tab Name Is ==> " + AllResponses);

		String PositiveResponses = driver
				.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Positive')]")).getText();
		Assert.assertEquals(PositiveResponses, "Positive");
		System.out.println("Present Tab Name Is ==> " + PositiveResponses);

		String NegativeResponses = driver
				.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Negative')]")).getText();
		Assert.assertEquals(NegativeResponses, "Negative");
		System.out.println("Present Tab Name Is ==> " + NegativeResponses);

	}

	public void VerifyAllReviewResponses() {

		String Food = driver.findElement(By.xpath("//div[@id='food']//div[contains(text(),'food')]")).getText();
		Assert.assertEquals(Food, "food");
		System.out.println("Present Tab Name Is ==> " + Food);

		String Service = driver.findElement(By.xpath("//div[@id='service']//div[contains(text(),'service')]"))
				.getText();
		Assert.assertEquals(Service, "service");
		System.out.println("Present Tab Name Is ==> " + Service);

		String server = driver.findElement(By.xpath("//div[contains(text(),'server')]")).getText();
		Assert.assertEquals(server, "server");
		System.out.println("Present Tab Name Is ==> " + server);

		String manager = driver.findElement(By.xpath("//div[contains(text(),'manager')]")).getText();
		Assert.assertEquals(manager, "manager");
		System.out.println("Present Tab Name Is ==> " + manager);

	}

	public void VerifyTableReviews() {

		String Topic = driver.findElement(By.xpath("//th[contains(text(),'Topic')]")).getText();
		Assert.assertEquals(Topic, "Topic");
		System.out.println("Present Tab Name Is ==> " + Topic);

		String Frequency = driver.findElement(By.xpath("//th[contains(text(),'Frequency')]")).getText();
		Assert.assertEquals(Frequency, "Frequency");
		System.out.println("Present Tab Name Is ==> " + Frequency);

		String Sentiments = driver.findElement(By.xpath("//th[contains(text(),'Sentiment')]")).getText();
		Assert.assertEquals(Sentiments, "Sentiment");
		System.out.println("Present Tab Name Is ==> " + Sentiments);

		String Source = driver.findElement(By.xpath("//th[contains(text(),'Source')]")).getText();
		Assert.assertEquals(Source, "Source");
		System.out.println("Present Tab Name Is ==> " + Source);

	}

	public void VerifyTableReviewContents() throws InterruptedException {

		String Topic = driver.findElement(By.xpath("//tr[1]//td[1]//td[1]//span[1]")).getText();
		Assert.assertEquals(Topic, "food");
		System.out.println("Present Tab Name Is ==> " + Topic);

		String services = driver.findElement(By.xpath("//tr[2]//td[1]//td[1]//span[1]")).getText();
		Assert.assertEquals(services, "service");
		System.out.println("Present Tab Name Is ==> " + services);

		
		String place = driver.findElement(By.xpath("//span[contains(text(),'place')]")).getText();
		Assert.assertEquals(place, "place");
		System.out.println("Present Tab Name Is ==> " + place);

		String ResponseCounts = driver
				.findElement(By.xpath("/descendant::div[starts-with(@class,'with-select sc-')][1]")).getText();
		Assert.assertTrue(ResponseCounts.contains("Show"));
		System.out.println("Total No Of Responses Shown ==> " + ResponseCounts);

		driver.findElement(By.xpath("/descendant::div[starts-with(@class,'with-select sc-')][1]")).click();
		driver.findElement(By.xpath("//li[contains(text(),'50')]")).click();
		Thread.sleep(4000);
		String ResponseCounts1 = driver
				.findElement(By.xpath("/descendant::div[starts-with(@class,'with-select sc-')][1]")).getText();
		Assert.assertTrue(ResponseCounts1.contains("Show"));
		System.out.println("Total No Of Responses Shown ==> " + ResponseCounts1);

		driver.findElement(By.xpath("/descendant::div[starts-with(@class,'with-select sc-')][1]")).click();
		driver.findElement(By.xpath("//li[contains(text(),'100')]")).click();
		Thread.sleep(4000);
		String ResponseCounts2 = driver
				.findElement(By.xpath("/descendant::div[starts-with(@class,'with-select sc-')][1]")).getText();
		Assert.assertTrue(ResponseCounts2.contains("Show"));
		System.out.println("Total No Of Responses Shown ==> " + ResponseCounts2);

	}

	public void VerifyTopicDetailReviewsForAllResponses() throws InterruptedException {

		driver.findElement(By.xpath("//tr[1]//td[1]//td[1]//span[1]")).click();

		String TopicDetails = driver.findElement(By.xpath("//div[contains(text(),'Topic Detail: Food')]"))
				.getAttribute("innerText");
		Assert.assertTrue(TopicDetails.contains("Topic Detail: Food"));
		System.out.println("Name Filter is present ==> " + TopicDetails);

		String topictrend = driver.findElement(By.xpath("//div[contains(text(),'Topic Trend')]")).getText();
		Assert.assertEquals(topictrend, "Topic Trend");
		System.out.println("Present Tab Name Is ==> " + topictrend);

		String totalfrequency = driver.findElement(By.xpath("//div[contains(text(),'Total Frequency')]")).getText();
		Assert.assertEquals(totalfrequency, "Total Frequency");
		System.out.println("Present Tab Name Is ==> " + totalfrequency);

		String mentions = driver.findElement(By.xpath("//div[contains(text(),'# of Mentions')]")).getText();
		Assert.assertEquals(mentions, "# of Mentions");
		System.out.println("Present Tab Name Is ==> " + mentions);

		String geographic = driver.findElement(By.xpath("//div[contains(text(),'Geographic Spread')]")).getText();
		Assert.assertEquals(geographic, "Geographic Spread");
		System.out.println("Present Tab Name Is ==> " + geographic);

		String TopicFeed = driver.findElement(By.xpath("//div[contains(text(),'Topic Feed')]")).getText();
		Assert.assertEquals(TopicFeed, "Topic Feed");
		System.out.println("Present Tab Name Is ==> " + TopicFeed);
		Thread.sleep(2000);

		driver.navigate().back();
		Thread.sleep(4000);
	}

	public void VerifyReportforUsersPositiveReviews() throws InterruptedException {

		String PositiveResponses = driver
				.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Positive')]")).getText();
		Assert.assertEquals(PositiveResponses, "Positive");
		System.out.println("Present Tab Name Is ==> " + PositiveResponses);

		driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Positive')]")).click();

		Thread.sleep(4000);
		WebElement Positive = driver
				.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Positive')]"));
		Assert.assertTrue(Positive.isEnabled());

		// Reviews::::=======>>>>

		String Food = driver.findElement(By.xpath("//div[@id='food']//div[contains(text(),'food')]")).getText();
		Assert.assertEquals(Food, "food");
		System.out.println("Present Tab Name Is ==> " + Food);

		String services = driver.findElement(By.xpath("//div[@id='service']//div[contains(text(),'service')]"))
				.getText();
		Assert.assertEquals(services, "service");
		System.out.println("Present Tab Name Is ==> " + services);

		

	}

	public void PositiveUserResponses() throws InterruptedException {

		driver.findElement(By.xpath("//tr[1]//td[1]//td[1]//span[1]")).click();

		String TopicDetails = driver.findElement(By.xpath("//div[contains(text(),'Topic Detail: Food')]"))
				.getAttribute("innerText");
		Assert.assertTrue(TopicDetails.contains("Topic Detail: Food"));
		System.out.println("Name Filter is present ==> " + TopicDetails);

		String topictrend = driver.findElement(By.xpath("//div[contains(text(),'Topic Trend')]")).getText();
		Assert.assertEquals(topictrend, "Topic Trend");
		System.out.println("Present Tab Name Is ==> " + topictrend);

		String totalfrequency = driver.findElement(By.xpath("//div[contains(text(),'Total Frequency')]")).getText();
		Assert.assertEquals(totalfrequency, "Total Frequency");
		System.out.println("Present Tab Name Is ==> " + totalfrequency);

		String mentions = driver.findElement(By.xpath("//div[contains(text(),'# of Mentions')]")).getText();
		Assert.assertEquals(mentions, "# of Mentions");
		System.out.println("Present Tab Name Is ==> " + mentions);

		String geographic = driver.findElement(By.xpath("//div[contains(text(),'Geographic Spread')]")).getText();
		Assert.assertEquals(geographic, "Geographic Spread");
		System.out.println("Present Tab Name Is ==> " + geographic);

		String TopicFeed = driver.findElement(By.xpath("//div[contains(text(),'Topic Feed')]")).getText();
		Assert.assertEquals(TopicFeed, "Topic Feed");
		System.out.println("Present Tab Name Is ==> " + TopicFeed);
		Thread.sleep(2000);

		driver.navigate().back();
		Thread.sleep(4000);

	}

	public void VerifyReportforUsersNegativeReviews() throws InterruptedException {

		String NegativeResponses = driver
				.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Negative')]")).getText();
		Assert.assertEquals(NegativeResponses, "Negative");
		System.out.println("Present Tab Name Is ==> " + NegativeResponses);

		driver.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Negative')]")).click();
		Thread.sleep(4000);
		WebElement Negative = driver
				.findElement(By.xpath("//li[starts-with(@class,'sc-')][contains(text(),'Negative')]"));
		Assert.assertTrue(Negative.isEnabled());

		// Reviews::::=======>>>>

		String minutes = driver.findElement(By.xpath("//div[contains(text(),'minutes')]")).getText();
		Assert.assertEquals(minutes, "minutes");
		System.out.println("Present Response Name Is ==> " + minutes);

		String food = driver.findElement(By.xpath("//div[contains(text(),'food')]")).getText();
		Assert.assertEquals(food, "food");
		System.out.println("Present Response Name Is ==> " + food);

		String service = driver.findElement(By.xpath("//div[contains(text(),'service')]")).getText();
		Assert.assertEquals(service, "service");
		System.out.println("Present Response Name Is ==> " + service);

		String drinks = driver.findElement(By.xpath("//div[contains(text(),'drinks')]")).getText();
		Assert.assertEquals(drinks, "drinks");
		System.out.println("Present Response Name Is ==> " + drinks);

	}

	public void UsersNegativeResponses() throws InterruptedException {

		driver.findElement(By.xpath("//tr[1]//td[1]//td[1]//span[1]")).click();

		String TopicDetails = driver.findElement(By.xpath("//div[contains(text(),'Topic Detail: Food')]"))
				.getAttribute("innerText");
		Assert.assertTrue(TopicDetails.contains("Topic Detail: Food"));
		System.out.println("Name Filter is present ==> " + TopicDetails);

		String topictrend = driver.findElement(By.xpath("//div[contains(text(),'Topic Trend')]")).getText();
		Assert.assertEquals(topictrend, "Topic Trend");
		System.out.println("Present Tab Name Is ==> " + topictrend);

		String totalfrequency = driver.findElement(By.xpath("//div[contains(text(),'Total Frequency')]")).getText();
		Assert.assertEquals(totalfrequency, "Total Frequency");
		System.out.println("Present Tab Name Is ==> " + totalfrequency);

		String mentions = driver.findElement(By.xpath("//div[contains(text(),'# of Mentions')]")).getText();
		Assert.assertEquals(mentions, "# of Mentions");
		System.out.println("Present Tab Name Is ==> " + mentions);

		String geographic = driver.findElement(By.xpath("//div[contains(text(),'Geographic Spread')]")).getText();
		Assert.assertEquals(geographic, "Geographic Spread");
		System.out.println("Present Tab Name Is ==> " + geographic);

		String TopicFeed = driver.findElement(By.xpath("//div[contains(text(),'Topic Feed')]")).getText();
		Assert.assertEquals(TopicFeed, "Topic Feed");
		System.out.println("Present Tab Name Is ==> " + TopicFeed);
		Thread.sleep(2000);

		driver.navigate().back();
		Thread.sleep(4000);
	}

	public void TopicMonitor() throws InterruptedException {

		Thread.sleep(2000);
		WebElement location = driver.findElement(By.xpath("//div[contains(text(),'SOCIAL')]"));
		Actions actions = new Actions(driver);
		actions.moveToElement(location);
		actions.click().build().perform();
		Thread.sleep(2000);

		driver.findElement(By.xpath("//div[contains(text(),'Topic Monitor')]")).click();
		Thread.sleep(5000);
	}

	public void verifyTopicMonitor() {

		String Topicmonitor = driver.findElement(By.xpath("/descendant::div[contains(text(),'Topic Monitor')][2]"))
				.getText();
		Assert.assertEquals(Topicmonitor, "Topic Monitor");
		System.out.println("Present Tab Name Is ==> " + Topicmonitor);

		String Sentiments = driver.findElement(By.xpath("//div[contains(text(),'Sentiment')]"))
				.getAttribute("innerText");
		Assert.assertTrue(Sentiments.contains("Sentiment"));
		System.out.println("Present Tab Name Is ==> " + Sentiments);

		String MentionsbySource = driver.findElement(By.xpath("//div[contains(text(),'Mentions by Source')]"))
				.getText();
		Assert.assertEquals(MentionsbySource, "Mentions by Source");
		System.out.println("Present Tab Name Is ==> " + MentionsbySource);

		String ShareofVoice = driver.findElement(By.xpath("//div[contains(text(),'Share of Voice')]")).getText();
		Assert.assertEquals(ShareofVoice, "Share of Voice");
		System.out.println("Present Tab Name Is ==> " + ShareofVoice);

		String TopicFeed = driver.findElement(By.xpath("//div[contains(text(),'Topic Feed')]")).getText();
		Assert.assertEquals(TopicFeed, "Topic Feed");
		System.out.println("Present Tab Name Is ==> " + TopicFeed);

		WebElement Filter = driver.findElement(By.xpath("//div[@id='navcontainer']"));
		Assert.assertTrue(Filter.isDisplayed());

	}

	public void VerifySentiments() {

		String bjrestaurant = driver
				.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'bjs restaurant')][1]")).getText();
		Assert.assertEquals(bjrestaurant, "bjs restaurant");
		System.out.println("Present Tab Name Is ==> " + bjrestaurant);

		String YardHouse = driver
				.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'Yard House')][1]")).getText();
		Assert.assertEquals(YardHouse, "Yard House");
		System.out.println("Present Tab Name Is ==> " + YardHouse);

		String CaliforniaPizza = driver
				.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'California Pizza Kitchen')][1]"))
				.getText();
		Assert.assertEquals(CaliforniaPizza, "California Pizza Kitchen");
		System.out.println("Present Tab Name Is ==> " + CaliforniaPizza);

		String OliveGarden = driver
				.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'Olive Garden')][1]")).getText();
		Assert.assertEquals(OliveGarden, "Olive Garden");
		System.out.println("Present Tab Name Is ==> " + OliveGarden);

		String TexasRoadhouse = driver
				.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'Texas Roadhouse')][1]"))
				.getText();
		Assert.assertEquals(TexasRoadhouse, "Texas Roadhouse");
		System.out.println("Present Tab Name Is ==> " + TexasRoadhouse);

		String pizookie = driver.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'pizookie')][1]"))
				.getText();
		Assert.assertEquals(pizookie, "pizookie");
		System.out.println("Present Tab Name Is ==> " + pizookie);

		String food = driver.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'food')][1]"))
				.getText();
		Assert.assertEquals(food, "food");
		System.out.println("Present Tab Name Is ==> " + food);

	}

	public void ManageTopics() throws InterruptedException {

		String ManageTopic = driver.findElement(By.xpath("//a[contains(text(),'MANAGE TOPICS')]")).getText();
		Assert.assertEquals(ManageTopic, "MANAGE TOPICS");
		System.out.println("Present Tab Name Is ==> " + ManageTopic);

		WebElement ManageTopic1 = driver.findElement(By.xpath("//a[contains(text(),'MANAGE TOPICS')]"));
		Assert.assertTrue(ManageTopic1.isEnabled());

		driver.findElement(By.xpath("//a[contains(text(),'MANAGE TOPICS')]")).click();

		WebElement Select = driver.findElement(By.xpath("//div[contains(text(),'Select all')]"));
		Assert.assertTrue(Select.isEnabled());

		WebElement ManageTopic2 = driver.findElement(By.xpath("//i[contains(text(),'delete')]"));
		Assert.assertTrue(ManageTopic2.isEnabled());

		String Close = driver.findElement(By.xpath("//a[contains(text(),'Close')]")).getText();
		Assert.assertEquals(Close, "CLOSE");

		WebElement Close1 = driver.findElement(By.xpath("//a[contains(text(),'Close')]"));
		Assert.assertTrue(Close1.isEnabled());

		String Newtopic = driver.findElement(By.xpath("//div[contains(text(),'NEW TOPIC')]")).getText();
		Assert.assertTrue(Newtopic.contains("NEW TOPIC"));

		driver.findElement(By.xpath("//div[contains(text(),'NEW TOPIC')]")).click();

		String Newtopic1 = driver.findElement(By.xpath("//div[contains(text(),'New Topic')]")).getText();
		Assert.assertTrue(Newtopic1.contains("New Topic"));

		String Topic = driver.findElement(By.xpath("//label[contains(text(),'Topic')]")).getText();
		Assert.assertEquals(Topic, "Topic");

		String sourcetype = driver.findElement(By.xpath("//div[contains(text(),'Source type')]")).getText();
		Assert.assertEquals(sourcetype, "Source type");

		String source = driver.findElement(By.xpath("/descendant::div[contains(text(),'Source')][2]")).getText();
		Assert.assertEquals(source, "Source");

		String Close2 = driver.findElement(By.xpath("//a[contains(text(),'CLOSE')]")).getText();
		Assert.assertEquals(Close2, "CLOSE");

		String save = driver.findElement(By.xpath("//a[contains(text(),'SAVE')]")).getText();
		Assert.assertEquals(save, "SAVE");

		driver.findElement(By.xpath("//a[contains(text(),'CLOSE')]")).click();
		Thread.sleep(1500);
		driver.findElement(By.xpath("//a[contains(text(),'Close')]")).click();

	}

	public void SearchWithDate() throws InterruptedException {

		WebElement Date = driver.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[1]/ul/li/div/div/div"));
		Assert.assertTrue(Date.isDisplayed());

		WebElement date = driver
				.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[1]/ul/li/div/div/div/div[1]"));
		JavascriptExecutor jf = (JavascriptExecutor) driver;
		jf.executeScript("arguments[0].click();", date);

		List<WebElement> elements = driver
				.findElements(By.xpath("/html/body/div[1]/div/div[2]/div/div[1]/ul/li/div/div/div/div[2]/div[1]/div"));
		Thread.sleep(2000);
		System.out.println("Number of elements:" + elements.size());
		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Location Records List have: " + elements.get(i).getText());
		}

		/*
		 * String LastHour =
		 * driver.findElement(By.xpath("//div[contains(text(),'Last hour')]")).getText()
		 * ; Assert.assertEquals(LastHour, "Last hour");
		 * 
		 * String Last24Hour =
		 * driver.findElement(By.xpath("//div[contains(text(),'Last 24 hours')]")).
		 * getText(); Assert.assertEquals(Last24Hour, "Last 24 hours");
		 * 
		 * String Last7Days =
		 * driver.findElement(By.xpath("//div[contains(text(),'Last 7 days')]")).getText
		 * (); Assert.assertEquals(Last7Days, "Last 7 days");
		 * 
		 * String Last30Days =
		 * driver.findElement(By.xpath("//div[contains(text(),'Last 30 days')]")).
		 * getText(); Assert.assertEquals(Last30Days, "Last 30 days");
		 * 
		 * String LastYear =
		 * driver.findElement(By.xpath("//div[contains(text(),'Last year')]")).getText()
		 * ; Assert.assertEquals(LastYear, "Last year");
		 */

		driver.findElement(By.xpath("//div[contains(text(),'Last year')]")).click();

		Thread.sleep(5000);
		verifyTopicMonitor();
		Thread.sleep(5000);
		VerifySentiments();
		Thread.sleep(3000);

		driver.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[1]/ul/li/div/div/div/div[1]")).click();
		driver.findElement(By.xpath("//div[contains(text(),'Last 30 days')]")).click();
		Thread.sleep(7000);

	}

	public void verifyTopicMonitorFilter() throws InterruptedException {

		WebElement Filter = driver.findElement(By.xpath("//div[@id='navcontainer']"));
		Assert.assertTrue(Filter.isDisplayed());

		Thread.sleep(2000);
		driver.findElement(By.xpath("//a[@id='fltrOptTopic']")).click();
		driver.findElement(By.xpath("//label[contains(text(),'California Pizza Kitchen')]")).click();
		driver.findElement(By.xpath("//label[contains(text(),'Olive Garden')]")).click();
		driver.findElement(By.xpath("//label[contains(text(),'Texas Roadhouse')]")).click();
		driver.findElement(By.xpath("//label[contains(text(),'Yard House')]")).click();
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][1]")).click();
		Thread.sleep(5000);

		String ShareOfVoice = driver
				.findElement(By.xpath("/descendant::*[@class='tick'][contains(text(),'bjs restaurant')][2]")).getText();
		Assert.assertEquals(ShareOfVoice, "bjs restaurant");
		System.out.println("Present Tab Is ==> " + ShareOfVoice);

		driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();
		Thread.sleep(1500);
		driver.findElement(By.xpath("//a[contains(text(),'Clear All')]")).click();
		Thread.sleep(1500);
		driver.findElement(By.xpath("//label[contains(text(),'Twitter')]")).click();
		driver.findElement(By.xpath("/descendant::a[contains(text(),'Apply')][2]")).click();
		Thread.sleep(5000);

	}

	public void GoogleQnA() throws InterruptedException {

		Thread.sleep(2000);
		WebElement location = driver.findElement(By.xpath("//div[contains(text(),'SOCIAL')]"));
		Actions actions = new Actions(driver);
		actions.moveToElement(location);
		actions.click().build().perform();
		Thread.sleep(2000);

		driver.findElement(By.xpath("//div[contains(text(),'Google Q&A')]")).click();
	}

	public void VerifyGoogleQnA() {

		String google = driver.findElement(By.xpath("//div[contains(text(),'GMB Q&A')]")).getAttribute("innerText");
		Assert.assertTrue(google.contains("GMB Q&A"));
		System.out.println("Present Tab Name Is ==> " + google);

		WebElement Filter = driver
				.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[2]/div[1]/div/nav/div[1]"));
		Assert.assertTrue(Filter.isDisplayed());

	}

	public void GooglePrecannedFilter() throws InterruptedException {

		driver.findElement(By.xpath("//span[contains(text(),'Recent Questions')]")).click();

		List<WebElement> elements = driver
				.findElements(By.xpath("/descendant::div[starts-with(@class,'dropdown-content sc-')][7]"));
		Thread.sleep(2000);
		System.out.println("Number of elements:" + elements.size());
		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Google precanned Records List have: " + elements.get(i).getText());
		}

		String Recent = driver.findElement(By.xpath("//div[contains(text(),'Recent Questions')]")).getText();
		Assert.assertTrue(Recent.contains("Recent Questions"));

		String Ready = driver.findElement(By.xpath("//div[contains(text(),'Ready to Post')]")).getText();
		Assert.assertTrue(Ready.contains("Ready to Post"));

		String Answered = driver.findElement(By.xpath("//div[contains(text(),'Answered Questions')]")).getText();
		Assert.assertTrue(Answered.contains("Answered Questions"));

	}

	public void QnASearchWithDate() throws InterruptedException {

		WebElement Date = driver
				.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[1]/ul[2]/li/div/div/div[1]/div/div[1]"));
		Assert.assertTrue(Date.isDisplayed());

		WebElement date = driver
				.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/div[1]/ul[2]/li/div/div/div[1]/div/div[1]"));
		JavascriptExecutor jf = (JavascriptExecutor) driver;
		jf.executeScript("arguments[0].click();", date);

		List<WebElement> elements = driver.findElements(
				By.xpath("/html/body/div[1]/div/div[2]/div/div[1]/ul[2]/li/div/div/div[1]/div/div[2]/div[1]/div/div"));
		Thread.sleep(2000);
		System.out.println("Number of elements:" + elements.size());
		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Location Records List have: " + elements.get(i).getText());
		}

		driver.findElement(By.xpath("//div[contains(text(),'All time')]")).click();

	}

	public void VerifyAddQnA() {

		WebElement AddQnA = driver.findElement(By.xpath("//div[contains(text(),'+ ADD Q&A')]"));
		Assert.assertTrue(AddQnA.isDisplayed());

		// ListView==>>
		WebElement ListView = driver.findElement(By.xpath("//i[contains(text(),'view_column')]"));
		Assert.assertTrue(ListView.isDisplayed());

		// ThumbnailView==>>
		WebElement ThumbnailView = driver.findElement(By.xpath("//i[contains(text(),'view_stream')]"));
		Assert.assertTrue(ThumbnailView.isDisplayed());

	}

	public void ClickOnMedia() throws InterruptedException {

		Thread.sleep(2000);
		WebElement location = driver.findElement(By.xpath("//div[contains(text(),'SOCIAL')]"));
		Actions actions = new Actions(driver);
		actions.moveToElement(location);
		actions.click().build().perform();
		Thread.sleep(2000);

		driver.findElement(By.xpath("//div[contains(text(),'Media')]")).click();
	}

	public void VerifyMedia() throws InterruptedException {

		String Store = driver.findElement(By.xpath("/descendant::div[contains(text(),'Media')][2]")).getText();
		Assert.assertTrue(Store.contains("Media"));
		System.out.println("Present Tab Name Is ==> " + Store);

		WebElement Filter = driver.findElement(By.xpath("//div[@id='navcontainer']"));
		Assert.assertTrue(Filter.isDisplayed());

		/*
		 * driver.findElement(By.xpath("//a[@id='fltrOptSource']")).click();
		 * Thread.sleep(1500);
		 * driver.findElement(By.xpath("//a[contains(text(),'Clear All')]")).click();
		 * Thread.sleep(1500);
		 * driver.findElement(By.xpath("//label[contains(text(),'Facebook')]")).click();
		 */

		WebElement SortBy = driver.findElement(By.xpath("//div[@id='selectArea']"));
		Assert.assertTrue(SortBy.isDisplayed());

		Thread.sleep(1500);
		driver.findElement(By.xpath("//div[@id='selectArea']//div//button")).click();

		List<WebElement> elements = driver.findElements(By.xpath("//body/div[3]/div[1]/div[1]/div[1]"));
		Thread.sleep(2000);
		System.out.println("Number of elements:" + elements.size());
		for (int i = 0; i < elements.size(); i++) {
			System.out.println("Location Records List have: " + elements.get(i).getText());
		}

		String oldest = driver.findElement(By.xpath("//div[contains(text(),'Oldest')]")).getText();
		Assert.assertEquals(oldest, "Oldest");

		String newest = driver.findElement(By.xpath("//div[contains(text(),'Newest')]")).getText();
		Assert.assertEquals(newest, "Newest");

		String AtoZ = driver.findElement(By.xpath("//div[contains(text(),'Author(A - Z)')]")).getText();
		Assert.assertEquals(AtoZ, "Author(A - Z)");

		String ZtoA = driver.findElement(By.xpath("//div[contains(text(),'Author(Z - A)')]")).getText();
		Assert.assertEquals(ZtoA, "Author(Z - A)");

		driver.findElement(By.xpath("//div[contains(text(),'Oldest')]")).click();
		Thread.sleep(1500);

		// Oldest==>>

		String old = driver.findElement(By.xpath("//p[contains(text(),'12/26/2010')]")).getText();
		Assert.assertEquals(old, "12/26/2010");

		// ListView==>>

		driver.findElement(By.xpath("//div[@class='listview']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//div[@class='thumbnail']")).click();

		WebElement Toggle = driver
				.findElement(By.xpath("/html/body/div[1]/div/div[2]/div/form/div/div/div/div/div[4]/div/ul"));
		Assert.assertTrue(Toggle.isDisplayed());

	}

}
